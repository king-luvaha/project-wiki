"use strict";(self.webpackChunkproject_wiki=self.webpackChunkproject_wiki||[]).push([[5401],{6531:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"TMDB CLI Tool/TMDB CLI Tool Task","title":"TMDB CLI Tool Task","description":"- Use TMDB API to fetch movie information and display it in the terminal.","source":"@site/docs/TMDB CLI Tool/TMDB CLI Tool Task.md","sourceDirName":"TMDB CLI Tool","slug":"/TMDB CLI Tool/TMDB CLI Tool Task","permalink":"/project-wiki/docs/TMDB CLI Tool/TMDB CLI Tool Task","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"TMDB CLI Application Setup Guide","permalink":"/project-wiki/docs/TMDB CLI Tool/TMDB CLI Application Setup Guide"},"next":{"title":"Build a Simple Python CLI Task Tracker - Explained Line by Line","permalink":"/project-wiki/docs/Task Tracker/Build a Simple Python CLI Task Tracker - Explained Line by Line"}}');var o=i(4848),a=i(8453);const r={},l=void 0,s={},c=[{value:"Requirements",id:"requirements",level:2}];function p(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Use TMDB API to fetch movie information and display it in the terminal."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"In this project, you will build a simple command line interface (CLI) to fetch data from The Movie Database (TMDB) and display it in the terminal. This project will help you practice your programming skills, including working with APIs, handling JSON data, and building a simple CLI application."}),"\n",(0,o.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,o.jsx)(n.p,{children:"The application should run from the command line, and be able to pull and show the popular, top-rated, upcoming and now playing movies from the TMDB API. The user should be able to specify the type of movies they want to see by passing a command line argument to the CLI tool."}),"\n",(0,o.jsx)(n.p,{children:"Here is how the CLI tool usage should look like:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'tmdb-app --type "playing"\ntmdb-app --type "popular"\ntmdb-app --type "top"\ntmdb-app --type "upcoming"\n'})}),"\n",(0,o.jsx)(n.p,{children:"There are some considerations to keep in mind:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Handle errors gracefully, such as API failures or network issues."}),"\n",(0,o.jsx)(n.li,{children:"Use a programming language of your choice to build this project."}),"\n",(0,o.jsx)(n.li,{children:"Make sure to include a README file with instructions on how to run the application and any other relevant information."}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const o={},a=t.createContext(o);function r(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);