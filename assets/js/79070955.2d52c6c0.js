"use strict";(self.webpackChunkproject_wiki=self.webpackChunkproject_wiki||[]).push([[1351],{2710:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>u,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Number Guessing Game/Number Guessing Game CLI Application","title":"Number Guessing Game CLI Application","description":"- Build a simple number guessing game to test your luck.","source":"@site/docs/Number Guessing Game/Number Guessing Game CLI Application.md","sourceDirName":"Number Guessing Game","slug":"/Number Guessing Game/Number Guessing Game CLI Application","permalink":"/project-wiki/docs/Number Guessing Game/Number Guessing Game CLI Application","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Number Guessing Game/Number Guessing Game CLI Application.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Build a Number Guessing Game Application - Explained Line by Line","permalink":"/project-wiki/docs/Number Guessing Game/Build a Number Guessing Game Application - Explained Line by Line"},"next":{"title":"Step-by-Step Guide to Building a Number Guessing Game in Python","permalink":"/project-wiki/docs/Number Guessing Game/Step-by-Step Guide to Building a Number Guessing Game in Python"}}');var i=s(4848),r=s(8453);const u={},a=void 0,o={},l=[{value:"Requirements",id:"requirements",level:3}];function c(e){const n={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Build a simple number guessing game to test your luck."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You are required to build a simple number guessing game where the computer randomly selects a number and the user has to guess it. The user will be given a limited number of chances to guess the number. If the user guesses the number correctly, the game will end, and the user will win. Otherwise, the game will continue until the user runs out of chances."}),"\n",(0,i.jsx)(n.h3,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsx)(n.p,{children:"It is a CLI-based game, so you need to use the command line to interact with the game. The game should work as follows:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"When the game starts, it should display a welcome message along with the rules of the game."}),"\n",(0,i.jsx)(n.li,{children:"The computer should randomly select a number between 1 and 100."}),"\n",(0,i.jsx)(n.li,{children:"User should select the difficulty level (easy, medium, hard) which will determine the number of chances they get to guess the number."}),"\n",(0,i.jsx)(n.li,{children:"The user should be able to enter their guess."}),"\n",(0,i.jsx)(n.li,{children:"If the user\u2019s guess is correct, the game should display a congratulatory message along with the number of attempts it took to guess the number."}),"\n",(0,i.jsx)(n.li,{children:"If the user\u2019s guess is incorrect, the game should display a message indicating whether the number is greater or less than the user\u2019s guess."}),"\n",(0,i.jsx)(n.li,{children:"The game should end when the user guesses the correct number or runs out of chances."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Here is a sample output of the game:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Welcome to the Number Guessing Game!\nI'm thinking of a number between 1 and 100.\nYou have 5 chances to guess the correct number.\n\nPlease select the difficulty level:\n1. Easy (10 chances)\n2. Medium (5 chances)\n3. Hard (3 chances)\n\nEnter your choice: 2\n\nGreat! You have selected the Medium difficulty level.\nLet's start the game!\n\nEnter your guess: 50\nIncorrect! The number is less than 50.\n\nEnter your guess: 25\nIncorrect! The number is greater than 25.\n\nEnter your guess: 35\nIncorrect! The number is less than 35.\n\nEnter your guess: 30\nCongratulations! You guessed the correct number in 4 attempts.\n"})}),"\n",(0,i.jsx)(n.p,{children:"To make this game more interesting, you can add the following features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Allow the user to play multiple rounds of the game (i.e., keep playing until the user decides to quit). You can do this by asking the user if they want to play again after each round."}),"\n",(0,i.jsx)(n.li,{children:"Add a timer to see how long it takes the user to guess the number."}),"\n",(0,i.jsx)(n.li,{children:"Keep track of the user\u2019s high score (i.e., the fewest number of attempts it took to guess the number under a specific difficulty level)."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>u,x:()=>a});var t=s(6540);const i={},r=t.createContext(i);function u(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:u(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);