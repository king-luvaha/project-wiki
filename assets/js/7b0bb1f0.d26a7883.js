"use strict";(self.webpackChunkproject_wiki=self.webpackChunkproject_wiki||[]).push([[4727],{4878:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"Number Guessing Game/Step-by-Step Guide to Building a Number Guessing Game in Python","title":"Step-by-Step Guide to Building a Number Guessing Game in Python","description":"In this blog post, we\'ll walk through building a Number Guessing Game in Python. This game will allow players to guess a randomly generated number while tracking high scores across different difficulty levels.","source":"@site/docs/Number Guessing Game/Step-by-Step Guide to Building a Number Guessing Game in Python.md","sourceDirName":"Number Guessing Game","slug":"/Number Guessing Game/Step-by-Step Guide to Building a Number Guessing Game in Python","permalink":"/project-wiki/docs/Number Guessing Game/Step-by-Step Guide to Building a Number Guessing Game in Python","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Number Guessing Game/Step-by-Step Guide to Building a Number Guessing Game in Python.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Number Guessing Game CLI Application","permalink":"/project-wiki/docs/Number Guessing Game/Number Guessing Game CLI Application"},"next":{"title":"Build a Simple Python CLI Task Tracker - Explained Line by Line","permalink":"/project-wiki/docs/Task Tracker/Build a Simple Python CLI Task Tracker - Explained Line by Line"}}');var t=s(4848),r=s(8453);const l={},o=void 0,c={},h=[{value:"<strong>Step 1: Import Required Modules</strong>",id:"step-1-import-required-modules",level:2},{value:"<strong>Why These Modules?</strong>",id:"why-these-modules",level:3},{value:"<strong>Step 2: Display the Welcome Screen</strong>",id:"step-2-display-the-welcome-screen",level:2},{value:"<strong>Why This Function?</strong>",id:"why-this-function",level:3},{value:"<strong>Step 3: Get Player\u2019s Difficulty Choice</strong>",id:"step-3-get-players-difficulty-choice",level:2},{value:"<strong>Why This Function?</strong>",id:"why-this-function-1",level:3},{value:"<strong>Step 4: Get the Player\u2019s Guess</strong>",id:"step-4-get-the-players-guess",level:2},{value:"<strong>Why This Function?</strong>",id:"why-this-function-2",level:3},{value:"<strong>Step 5: The Core Game Logic</strong>",id:"step-5-the-core-game-logic",level:2},{value:"<strong>Why This Function?</strong>",id:"why-this-function-3",level:3},{value:"<strong>Step 6: The Main Game Loop</strong>",id:"step-6-the-main-game-loop",level:2},{value:"<strong>Why This Function?</strong>",id:"why-this-function-4",level:3},{value:"<strong>Step 7: Run the Game</strong>",id:"step-7-run-the-game",level:2},{value:"<strong>Why This Check?</strong>",id:"why-this-check",level:3},{value:"<strong>Final Thoughts</strong>",id:"final-thoughts",level:2},{value:"<strong>Possible Extensions</strong>",id:"possible-extensions",level:3}];function a(e){const n={br:"br",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["In this blog post, we'll walk through building a ",(0,t.jsx)(n.strong,{children:"Number Guessing Game"})," in Python. This game will allow players to guess a randomly generated number while tracking high scores across different difficulty levels."]}),"\n",(0,t.jsx)(n.p,{children:"By the end of this guide, you'll understand:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"How to generate random numbers"}),"\n",(0,t.jsx)(n.li,{children:"How to implement difficulty levels"}),"\n",(0,t.jsx)(n.li,{children:"How to track high scores"}),"\n",(0,t.jsx)(n.li,{children:"How to validate user input"}),"\n",(0,t.jsx)(n.li,{children:"How to structure a Python game loop"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"step-1-import-required-modules",children:(0,t.jsx)(n.strong,{children:"Step 1: Import Required Modules"})}),"\n",(0,t.jsx)(n.p,{children:"We start by importing the necessary Python modules:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import random  # For generating random numbers\nimport time    # For tracking game duration\nfrom collections import defaultdict  # For storing high scores\n"})}),"\n",(0,t.jsx)(n.h3,{id:"why-these-modules",children:(0,t.jsx)(n.strong,{children:"Why These Modules?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"random"})," \u2192 Generates the secret number."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"time"})," \u2192 Measures how long the player takes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"defaultdict"})," \u2192 Efficiently stores high scores for different difficulties."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"step-2-display-the-welcome-screen",children:(0,t.jsx)(n.strong,{children:"Step 2: Display the Welcome Screen"})}),"\n",(0,t.jsx)(n.p,{children:"This function introduces the game and explains difficulty levels:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def display_welcome():\n    print("\\033[1;36m\\nWelcome to the Number Guessing Game!\\033[0m")\n    print("I\'m thinking of a number between 1 and 100. \ud83e\udde0")\n    print("\\nDifficulty levels:")\n    print("1. Easy (10 chances)")\n    print("2. Medium (5 chances)")\n    print("3. Hard (3 chances)")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"why-this-function",children:(0,t.jsx)(n.strong,{children:"Why This Function?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Gives players clear instructions."}),"\n",(0,t.jsx)(n.li,{children:"Explains available difficulty levels."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"step-3-get-players-difficulty-choice",children:(0,t.jsx)(n.strong,{children:"Step 3: Get Player\u2019s Difficulty Choice"})}),"\n",(0,t.jsx)(n.p,{children:"This function ensures the player selects a valid difficulty (1-3):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def get_difficulty():\n    while True:  # Keep asking until valid input\n        try:\n            choice = int(input("\\nEnter your choice (1-3): "))\n            if 1 <= choice <= 3:\n                return choice\n            else:\n                print("Please enter a number between 1 and 3.")\n        except ValueError:  # Handles non-integer inputs\n            print("Invalid input. Please enter a number.")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"why-this-function-1",children:(0,t.jsx)(n.strong,{children:"Why This Function?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Uses ",(0,t.jsx)(n.code,{children:"try-except"})," to prevent crashes from invalid inputs."]}),"\n",(0,t.jsx)(n.li,{children:"Ensures the player picks a valid difficulty."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"step-4-get-the-players-guess",children:(0,t.jsx)(n.strong,{children:"Step 4: Get the Player\u2019s Guess"})}),"\n",(0,t.jsx)(n.p,{children:"This function ensures the player enters a valid guess (1-100):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def get_guess():\n    while True:\n        try:\n            guess = int(input("\\nEnter your guess: "))\n            if 1 <= guess <= 100:\n                return guess\n            else:\n                print("Please enter a number between 1 and 100.")\n        except ValueError:\n            print("Invalid input. Please enter a number.")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"why-this-function-2",children:(0,t.jsx)(n.strong,{children:"Why This Function?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Prevents invalid guesses (like words or out-of-range numbers)."}),"\n",(0,t.jsx)(n.li,{children:"Keeps the game running smoothly."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"step-5-the-core-game-logic",children:(0,t.jsx)(n.strong,{children:"Step 5: The Core Game Logic"})}),"\n",(0,t.jsx)(n.p,{children:"This function runs the actual game:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def play_game(difficulty, high_scores):\n    # Difficulty settings (attempts)\n    difficulty_settings = {1: 10, 2: 5, 3: 3}\n    max_attempts = difficulty_settings[difficulty]\n    difficulty_names = {1: "Easy", 2: "Medium", 3: "Hard"}\n    \n\t# Game setup\n    print(f"\\nGreat! You have selected {difficulty_names[difficulty]} difficulty.")\n    print(f"You have {max_attempts} chances to guess the correct number. \u263a\ufe0f")\n    \n    secret_number = random.randint(1, 100)\n    attempts = 0\n    start_time = time.time()  # Start timer\n    \n\t# Main game loop\n    while attempts < max_attempts:\n        attempts += 1\n        guess = get_guess()\n        \n        if guess == secret_number:\n            end_time = time.time()\n            time_taken = round(end_time - start_time, 2)\n            print(f"\\n\ud83c\udf89 Congratulations! You guessed the correct number {attempts} attempts. \ud83c\udf89")\n            print(f"\u23f1\ufe0f Time taken: {time_taken} seconds")\n            \n            # Update high score if better than previous\n            if high_scores[difficulty] == 0 or attempts < high_scores[difficulty]:\n                high_scores[difficulty] = attempts\n                print("\ud83c\udfc6 New high score for this difficulty level! \ud83c\udfc6")\n            return True  # Player won\n        \n        # Give hints if wrong\n        if attempts < max_attempts:\n            if guess < secret_number:\n                print(f"Incorrect! \u2b06\ufe0f  The number is greater than {guess}.")\n            else:\n                print(f"Incorrect! \u2b07\ufe0f  The number is less than {guess}.")\n            print(f"Remaining attempts: {max_attempts - attempts}")\n    \n    print(f"\\n\ud83d\udc80 Game over! The number was {secret_number}. \ud83d\udc80")\n    return False  # Player lost\n'})}),"\n",(0,t.jsx)(n.h3,{id:"why-this-function-3",children:(0,t.jsx)(n.strong,{children:"Why This Function?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Uses ",(0,t.jsx)(n.code,{children:"random.randint()"})," to pick a secret number."]}),"\n",(0,t.jsx)(n.li,{children:"Tracks attempts and time."}),"\n",(0,t.jsx)(n.li,{children:"Updates high scores if the player does better than before."}),"\n",(0,t.jsx)(n.li,{children:'Gives feedback ("Higher/Lower") to guide the player.'}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"step-6-the-main-game-loop",children:(0,t.jsx)(n.strong,{children:"Step 6: The Main Game Loop"})}),"\n",(0,t.jsx)(n.p,{children:"This function ties everything together:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def main():\n    high_scores = defaultdict(int)  # Tracks best attempts per difficulty\n    \n    while True:  # Game loop\n        display_welcome()\n        print("\\n\ud83c\udfc5 Current High Scores:")\n        print(f"Easy: {high_scores[1] or \'No score yet\'}")\n        print(f"Medium: {high_scores[2] or \'No score yet\'}")\n        print(f"Hard: {high_scores[3] or \'No score yet\'}")\n        \n        difficulty = get_difficulty()\n        play_game(difficulty, high_scores)\n        \n        play_again = input("\\nPlay again? (yes/no): ").lower()\n        if play_again not in [\'y\', \'yes\']:\n            print("\\nThanks for playing! \ud83d\udc4b")\n            break\n'})}),"\n",(0,t.jsx)(n.h3,{id:"why-this-function-4",children:(0,t.jsx)(n.strong,{children:"Why This Function?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Uses ",(0,t.jsx)(n.code,{children:"defaultdict"})," to store high scores."]}),"\n",(0,t.jsx)(n.li,{children:"Shows current high scores before each game."}),"\n",(0,t.jsx)(n.li,{children:"Allows replaying without restarting the program."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"step-7-run-the-game",children:(0,t.jsx)(n.strong,{children:"Step 7: Run the Game"})}),"\n",(0,t.jsx)(n.p,{children:"Finally, we start the game when the script runs:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'if __name__ == "__main__":\n    main()\n'})}),"\n",(0,t.jsx)(n.h3,{id:"why-this-check",children:(0,t.jsx)(n.strong,{children:"Why This Check?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ensures the game only runs when executed directly (not when imported as a module)."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"final-thoughts",children:(0,t.jsx)(n.strong,{children:"Final Thoughts"})}),"\n",(0,t.jsxs)(n.p,{children:["This game demonstrates:\n\u2705 ",(0,t.jsx)(n.strong,{children:"Random number generation"})," (",(0,t.jsx)(n.code,{children:"random.randint"}),")",(0,t.jsx)(n.br,{}),"\n","\u2705 ",(0,t.jsx)(n.strong,{children:"User input validation"})," (",(0,t.jsx)(n.code,{children:"try-except"})," blocks)",(0,t.jsx)(n.br,{}),"\n","\u2705 ",(0,t.jsx)(n.strong,{children:"Difficulty levels"})," (adjusting attempts)",(0,t.jsx)(n.br,{}),"\n","\u2705 ",(0,t.jsx)(n.strong,{children:"High score tracking"})," (",(0,t.jsx)(n.code,{children:"defaultdict"}),")",(0,t.jsx)(n.br,{}),"\n","\u2705 ",(0,t.jsx)(n.strong,{children:"Game loop structure"})," (play again option)"]}),"\n",(0,t.jsx)(n.h3,{id:"possible-extensions",children:(0,t.jsx)(n.strong,{children:"Possible Extensions"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Add a ",(0,t.jsx)(n.strong,{children:"leaderboard"})," to save scores between sessions."]}),"\n",(0,t.jsxs)(n.li,{children:["Implement a ",(0,t.jsx)(n.strong,{children:"timer mode"})," where players must guess quickly."]}),"\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.strong,{children:"sound effects"})," for correct/incorrect guesses."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);