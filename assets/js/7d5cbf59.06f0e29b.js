"use strict";(self.webpackChunkproject_wiki=self.webpackChunkproject_wiki||[]).push([[4480],{1308:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"MongoDB/Getting Started with the MongoDB Query API Using MongoDB Compass or MongoDB Shell","title":"Getting Started with the MongoDB Query API Using MongoDB Compass or MongoDB Shell","description":"Getting Started with MongoDB Compass - Part 1","source":"@site/docs/MongoDB/Getting Started with the MongoDB Query API Using MongoDB Compass or MongoDB Shell.md","sourceDirName":"MongoDB","slug":"/MongoDB/Getting Started with the MongoDB Query API Using MongoDB Compass or MongoDB Shell","permalink":"/project-wiki/docs/MongoDB/Getting Started with the MongoDB Query API Using MongoDB Compass or MongoDB Shell","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Postman Test Guide","permalink":"/project-wiki/docs/Markdown Note Taking App/Postman Test Guide"},"next":{"title":"The Complete Beginner\u2019s Guide to MongoDB","permalink":"/project-wiki/docs/MongoDB/The Complete Beginner\u2019s Guide to MongoDB"}}');var i=s(4848),r=s(8453);const l={},d=void 0,o={},a=[{value:"Getting Started with MongoDB Compass - Part 1",id:"getting-started-with-mongodb-compass---part-1",level:2},{value:"\ud83e\uddf1 What is MongoDB and What is the Query API?",id:"-what-is-mongodb-and-what-is-the-query-api",level:3},{value:"\ud83d\udee0 Step 1: Set Up MongoDB &amp; MongoDB Compass",id:"-step-1-set-up-mongodb--mongodb-compass",level:3},{value:"\ud83d\udce5 Step 2: Insert Sample Data",id:"-step-2-insert-sample-data",level:3},{value:"\ud83d\udd0d Step 3: Query Data with the Query API (Visually!)",id:"-step-3-query-data-with-the-query-api-visually",level:3},{value:"\u2705 Find a specific document",id:"-find-a-specific-document",level:3},{value:"\ud83d\udd22 Filter with Comparison Operators",id:"-filter-with-comparison-operators",level:3},{value:"\ud83e\udde0 Use Logical Operators",id:"-use-logical-operators",level:3},{value:"\ud83d\udd0d Search with Regex (Pattern Matching)",id:"-search-with-regex-pattern-matching",level:3},{value:"\u2705 Combine Conditions",id:"-combine-conditions",level:3},{value:"\u270f\ufe0f Step 4: Update Documents",id:"\ufe0f-step-4-update-documents",level:3},{value:"\ud83d\uddd1 Step 5: Delete Documents",id:"-step-5-delete-documents",level:3},{value:"\ud83e\uddee Bonus: Aggregation Tab",id:"-bonus-aggregation-tab",level:3},{value:"\ud83e\udde0 Recap: Common MongoDB Query API Operators",id:"-recap-common-mongodb-query-api-operators",level:3},{value:"\ud83d\ude80 What Next?",id:"-what-next",level:3},{value:"\ud83d\udca1 Pro Tip:",id:"-pro-tip",level:3},{value:"\ud83d\udcbb Getting Started with the MongoDB Query API Using MongoDB Shell (mongosh) - Part 2",id:"-getting-started-with-the-mongodb-query-api-using-mongodb-shell-mongosh---part-2",level:2},{value:"\ud83e\uddf1 What is MongoDB and What is the Query API?",id:"-what-is-mongodb-and-what-is-the-query-api-1",level:3},{value:"\ud83d\udd27 Step 1: Open MongoDB Shell",id:"-step-1-open-mongodb-shell",level:3},{value:"\ud83d\udc49 Open your terminal and run:",id:"-open-your-terminal-and-run",level:3},{value:"\ud83d\uddc2 Step 2a: Create a Collection and Insert Documents",id:"-step-2a-create-a-collection-and-insert-documents",level:3},{value:"\ud83c\udd95 Multi-line Input Method (Perfect for Small Tests)",id:"-multi-line-input-method-perfect-for-small-tests",level:4},{value:"Alternative Insert Methods",id:"alternative-insert-methods",level:4},{value:"\ud83d\uddc2 Step 2b: Create a Collection and Insert Documents",id:"-step-2b-create-a-collection-and-insert-documents",level:3},{value:"\ud83d\udd0d Step 3: Querying Data (MongoDB Query API in Action)",id:"-step-3-querying-data-mongodb-query-api-in-action",level:3},{value:"\u270f\ufe0f Step 4: Update Documents",id:"\ufe0f-step-4-update-documents-1",level:3},{value:"Update one document",id:"update-one-document",level:4},{value:"Update many documents",id:"update-many-documents",level:4},{value:"Upsert (update or insert if not found)",id:"upsert-update-or-insert-if-not-found",level:4},{value:"\ud83d\uddd1 Step 5: Delete Documents",id:"-step-5-delete-documents-1",level:3},{value:"Delete one",id:"delete-one",level:4},{value:"Delete many",id:"delete-many",level:4},{value:"\ud83e\uddee Step 6: Aggregation Example",id:"-step-6-aggregation-example",level:3},{value:"\ud83d\udd01 Bonus: Other Useful Query Operators",id:"-bonus-other-useful-query-operators",level:3},{value:"\ud83d\ude80 What Next?",id:"-what-next-1",level:4},{value:"\ud83d\udd17 Want to Practice More?",id:"-want-to-practice-more",level:4}];function c(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"getting-started-with-mongodb-compass---part-1",children:"Getting Started with MongoDB Compass - Part 1"}),"\n",(0,i.jsx)(n.h3,{id:"-what-is-mongodb-and-what-is-the-query-api",children:"\ud83e\uddf1 What is MongoDB and What is the Query API?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"MongoDB"})," is a ",(0,i.jsx)(n.strong,{children:"NoSQL"})," database that stores data in flexible, JSON-like documents (called BSON). Instead of tables and rows (like SQL), MongoDB works with collections and documents."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Query API"})," is how you search and manipulate data inside MongoDB. Think of it as asking questions like:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u201cFind me all users who are older than 18.\u201d"}),"\n",(0,i.jsx)(n.li,{children:"\u201cUpdate the status of all completed tasks.\u201d"}),"\n",(0,i.jsx)(n.li,{children:"\u201cDelete inactive accounts.\u201d"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-step-1-set-up-mongodb--mongodb-compass",children:"\ud83d\udee0 Step 1: Set Up MongoDB & MongoDB Compass"}),"\n",(0,i.jsx)(n.p,{children:"Since you mentioned MongoDB Compass is already installed and using default settings, let\u2019s ensure you're connected:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Open MongoDB Compass."})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Use the default connection string:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"mongodb://localhost:27017\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Just click ",(0,i.jsx)(n.strong,{children:"\u201cConnect\u201d"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["You\u2019ll now see your databases (e.g., ",(0,i.jsx)(n.code,{children:"admin"}),", ",(0,i.jsx)(n.code,{children:"local"}),", and maybe some custom ones)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"To start testing queries:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"\u201cCreate Database\u201d"})," \u2192 Name: ",(0,i.jsx)(n.code,{children:"testdb"}),", Collection: ",(0,i.jsx)(n.code,{children:"users"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-step-2-insert-sample-data",children:"\ud83d\udce5 Step 2: Insert Sample Data"}),"\n",(0,i.jsxs)(n.p,{children:["Click your new collection: ",(0,i.jsx)(n.code,{children:"testdb > users"})," and go to the ",(0,i.jsx)(n.strong,{children:"\u201cDocuments\u201d tab"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.strong,{children:"\u201cInsert Document\u201d"})," and paste this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Ezra",\n  "age": 25,\n  "location": "Nairobi",\n  "status": "active"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Repeat and add a few more:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{ "name": "Jane", "age": 17, "location": "Kisumu", "status": "inactive" }\n{ "name": "Mark", "age": 32, "location": "Mombasa", "status": "active" }\n{ "name": "Ali", "age": 22, "location": "Nairobi", "status": "inactive" }\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-step-3-query-data-with-the-query-api-visually",children:"\ud83d\udd0d Step 3: Query Data with the Query API (Visually!)"}),"\n",(0,i.jsxs)(n.p,{children:["In Compass, go to the ",(0,i.jsx)(n.strong,{children:"\u201cFilter\u201d"})," field \u2014 this is where we use the Query API!"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-find-a-specific-document",children:"\u2705 Find a specific document"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Goal:"})," Get user with name ",(0,i.jsx)(n.code,{children:'"Ezra"'}),"\n",(0,i.jsx)(n.strong,{children:"Query:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{ "name": "Ezra" }\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u27a1\ufe0f Press Enter. You\u2019ll see Ezra\u2019s document appear."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-filter-with-comparison-operators",children:"\ud83d\udd22 Filter with Comparison Operators"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Goal:"})," Find users aged ",(0,i.jsx)(n.strong,{children:"over 20"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{ "age": { "$gt": 20 } }\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"$gt"})," = greater than\nOther operators:"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"$lt"})," (less than)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"$gte"})," (greater than or equal)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"$lte"})," (less than or equal)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-use-logical-operators",children:"\ud83e\udde0 Use Logical Operators"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Goal:"})," Get users from Nairobi ",(0,i.jsx)(n.strong,{children:"or"})," Kisumu"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "$or": [\n    { "location": "Nairobi" },\n    { "location": "Kisumu" }\n  ]\n}\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"$or"})," combines multiple conditions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"$and"})," would require both conditions to be true."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-search-with-regex-pattern-matching",children:"\ud83d\udd0d Search with Regex (Pattern Matching)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Goal:"})," Find names starting with ",(0,i.jsx)(n.code,{children:'"J"'}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{ "name": { "$regex": "^J", "$options": "i" } }\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"^"})," means \u201cstarts with\u201d"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"i"'})," = case-insensitive"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-combine-conditions",children:"\u2705 Combine Conditions"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Goal:"})," Find active users over 20:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "$and": [\n    { "status": "active" },\n    { "age": { "$gt": 20 } }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"\ufe0f-step-4-update-documents",children:"\u270f\ufe0f Step 4: Update Documents"}),"\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.strong,{children:"\u201cDocuments\u201d > Select a document"})," > Click ",(0,i.jsx)(n.strong,{children:"\u201cEdit\u201d"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Change ",(0,i.jsx)(n.code,{children:'"status": "inactive"'})," to ",(0,i.jsx)(n.code,{children:'"status": "active"'})," \u2014 then click ",(0,i.jsx)(n.strong,{children:"\u201cUpdate\u201d"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["For bulk updates, you'd typically use the ",(0,i.jsx)(n.strong,{children:"Mongo Shell"})," or ",(0,i.jsx)(n.strong,{children:"Node.js"}),", but Compass supports this in ",(0,i.jsx)(n.strong,{children:"\u201cAggregations\u201d"})," and ",(0,i.jsx)(n.strong,{children:"\u201cCommand Line\u201d"})," tabs too (advanced)."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-step-5-delete-documents",children:"\ud83d\uddd1 Step 5: Delete Documents"}),"\n",(0,i.jsx)(n.p,{children:"In the document view:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Click the ",(0,i.jsx)(n.strong,{children:"trash icon"})," to delete a single document."]}),"\n",(0,i.jsxs)(n.li,{children:["For mass deletion, you can use the ",(0,i.jsx)(n.strong,{children:"Filter"}),", then ",(0,i.jsx)(n.strong,{children:"\u201cDelete Many\u201d"})," based on your filter."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"For example, to delete all users under 18:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{ "age": { "$lt": 18 } }\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Then click ",(0,i.jsx)(n.strong,{children:"\u201cDELETE\u201d"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-bonus-aggregation-tab",children:"\ud83e\uddee Bonus: Aggregation Tab"}),"\n",(0,i.jsxs)(n.p,{children:["You can run advanced queries like group, count, and summarize data using the ",(0,i.jsx)(n.strong,{children:"Aggregation Pipeline"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example:"})," Count users per location:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Go to ",(0,i.jsx)(n.strong,{children:"\u201cAggregations\u201d"})]}),"\n",(0,i.jsx)(n.li,{children:"Add this stage:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'{ "$group": { "_id": "$location", "total": { "$sum": 1 } } }\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Then click ",(0,i.jsx)(n.strong,{children:"\u201cExecute\u201d"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-recap-common-mongodb-query-api-operators",children:"\ud83e\udde0 Recap: Common MongoDB Query API Operators"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Operator"}),(0,i.jsx)(n.th,{children:"Use Case"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"$gt"}),", ",(0,i.jsx)(n.code,{children:"$lt"})]}),(0,i.jsx)(n.td,{children:"Compare numbers"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"$eq"}),", ",(0,i.jsx)(n.code,{children:"$ne"})]}),(0,i.jsx)(n.td,{children:"Equal / Not equal"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"$or"}),", ",(0,i.jsx)(n.code,{children:"$and"})]}),(0,i.jsx)(n.td,{children:"Logic"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"$regex"})}),(0,i.jsx)(n.td,{children:"Pattern match"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"$in"}),", ",(0,i.jsx)(n.code,{children:"$nin"})]}),(0,i.jsx)(n.td,{children:"Check inside an array"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"$exists"})}),(0,i.jsx)(n.td,{children:"Field exists or not"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-what-next",children:"\ud83d\ude80 What Next?"}),"\n",(0,i.jsx)(n.p,{children:"You now know how to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Add documents"}),"\n",(0,i.jsx)(n.li,{children:"Query like a pro with filters"}),"\n",(0,i.jsx)(n.li,{children:"Use logical and comparison operators"}),"\n",(0,i.jsx)(n.li,{children:"Update or delete data \u2014 all visually"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"As you advance, you\u2019ll want to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Learn the Mongo Shell"}),"\n",(0,i.jsx)(n.li,{children:"Use MongoDB with Node.js, Python, or Django"}),"\n",(0,i.jsx)(n.li,{children:"Write aggregation pipelines"}),"\n",(0,i.jsx)(n.li,{children:"Design proper schemas"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-pro-tip",children:"\ud83d\udca1 Pro Tip:"}),"\n",(0,i.jsx)(n.p,{children:"If you're building projects, MongoDB Atlas offers free cloud databases so you can access your data remotely."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-getting-started-with-the-mongodb-query-api-using-mongodb-shell-mongosh---part-2",children:"\ud83d\udcbb Getting Started with the MongoDB Query API Using MongoDB Shell (mongosh) - Part 2"}),"\n",(0,i.jsx)(n.h3,{id:"-what-is-mongodb-and-what-is-the-query-api-1",children:"\ud83e\uddf1 What is MongoDB and What is the Query API?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"MongoDB"})," is a ",(0,i.jsx)(n.strong,{children:"NoSQL"})," database that stores data in flexible, JSON-like documents (called BSON). Instead of tables and rows (like SQL), MongoDB works with collections and documents."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Query API"})," is how you search and manipulate data inside MongoDB. Think of it as asking questions like:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u201cFind me all users who are older than 18.\u201d"}),"\n",(0,i.jsx)(n.li,{children:"\u201cUpdate the status of all completed tasks.\u201d"}),"\n",(0,i.jsx)(n.li,{children:"\u201cDelete inactive accounts.\u201d"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-step-1-open-mongodb-shell",children:"\ud83d\udd27 Step 1: Open MongoDB Shell"}),"\n",(0,i.jsx)(n.p,{children:"Assuming MongoDB is installed locally:"}),"\n",(0,i.jsx)(n.h3,{id:"-open-your-terminal-and-run",children:"\ud83d\udc49 Open your terminal and run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mongosh\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You\u2019ll see a welcome message and be connected to the default ",(0,i.jsx)(n.code,{children:"test"})," database:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"test>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Tip:"})," To switch to or create a new database:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"use testdb\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"testdb"})," doesn\u2019t exist yet, MongoDB will create it as soon as you insert data."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-step-2a-create-a-collection-and-insert-documents",children:"\ud83d\uddc2 Step 2a: Create a Collection and Insert Documents"}),"\n",(0,i.jsx)(n.h4,{id:"-multi-line-input-method-perfect-for-small-tests",children:"\ud83c\udd95 Multi-line Input Method (Perfect for Small Tests)"}),"\n",(0,i.jsx)(n.p,{children:"For small-scale testing, you can use mongosh's multi-line input mode:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Start your insert command"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"db.users.insertMany([\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Press Enter"})," - you'll see ",(0,i.jsx)(n.code,{children:"..."})," indicating continuation mode"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Add your documents line by line"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'  { name: "Ezra", age: 25, location: "Nairobi", status: "active" },\n  { name: "Jane", age: 17, location: "Kisumu", status: "inactive" },\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Complete the array and command"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'  { name: "Mark", age: 32, location: "Mombasa", status: "active" },\n  { name: "Ali", age: 22, location: "Nairobi", status: "inactive" }\n])\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Press Enter twice"})," to execute (first Enter ends the last line, second executes)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Pro Tip:"})," If you make a mistake:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Press Ctrl+C to cancel the multi-line input"}),"\n",(0,i.jsxs)(n.li,{children:["Or type ",(0,i.jsx)(n.code,{children:"exit"})," and press Enter to abort"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"alternative-insert-methods",children:"Alternative Insert Methods"}),"\n",(0,i.jsx)(n.p,{children:"For larger datasets, consider:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Editor mode"})," (after configuring an editor)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Loading from a file"})," (",(0,i.jsx)(n.code,{children:'load("insert.js")'}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Single-line JSON"})," (for very small inserts)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-step-2b-create-a-collection-and-insert-documents",children:"\ud83d\uddc2 Step 2b: Create a Collection and Insert Documents"}),"\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.code,{children:"users"})," collection and insert documents:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.users.insertMany([\n  { name: "Ezra", age: 25, location: "Nairobi", status: "active" },\n  { name: "Jane", age: 17, location: "Kisumu", status: "inactive" },\n  { name: "Mark", age: 32, location: "Mombasa", status: "active" },\n  { name: "Ali", age: 22, location: "Nairobi", status: "inactive" }\n])\n'})}),"\n",(0,i.jsx)(n.p,{children:"Output should say:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Acknowledged: true, insertedIds: [...]\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u2705 You now have sample data!"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-step-3-querying-data-mongodb-query-api-in-action",children:"\ud83d\udd0d Step 3: Querying Data (MongoDB Query API in Action)"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Find all documents"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"db.users.find()\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Find a specific document"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.users.find({ name: "Ezra" })\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Comparison queries"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"db.users.find({ age: { $gt: 20 } })       // age > 20\ndb.users.find({ age: { $lte: 25 } })      // age \u2264 25\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:"Logical queries"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.users.find({\n  $or: [\n    { location: "Nairobi" },\n    { location: "Kisumu" }\n  ]\n})\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.users.find({\n  $and: [\n    { status: "active" },\n    { age: { $gt: 20 } }\n  ]\n})\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsx)(n.li,{children:"Regex matching"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.users.find({ name: { $regex: "^J", $options: "i" } })\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsx)(n.li,{children:"Projecting specific fields"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"db.users.find({ age: { $gt: 20 } }, { name: 1, age: 1, _id: 0 })\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This shows only ",(0,i.jsx)(n.code,{children:"name"})," and ",(0,i.jsx)(n.code,{children:"age"})," fields (excluding ",(0,i.jsx)(n.code,{children:"_id"}),")."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"\ufe0f-step-4-update-documents-1",children:"\u270f\ufe0f Step 4: Update Documents"}),"\n",(0,i.jsx)(n.h4,{id:"update-one-document",children:"Update one document"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.users.updateOne(\n  { name: "Jane" },\n  { $set: { status: "active" } }\n)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"update-many-documents",children:"Update many documents"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.users.updateMany(\n  { status: "inactive" },\n  { $set: { verified: false } }\n)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"upsert-update-or-insert-if-not-found",children:"Upsert (update or insert if not found)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.users.updateOne(\n  { name: "NewUser" },\n  { $set: { age: 30, status: "active" } },\n  { upsert: true }\n)\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-step-5-delete-documents-1",children:"\ud83d\uddd1 Step 5: Delete Documents"}),"\n",(0,i.jsx)(n.h4,{id:"delete-one",children:"Delete one"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.users.deleteOne({ name: "Ezra" })\n'})}),"\n",(0,i.jsx)(n.h4,{id:"delete-many",children:"Delete many"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.users.deleteMany({ status: "inactive" })\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-step-6-aggregation-example",children:"\ud83e\uddee Step 6: Aggregation Example"}),"\n",(0,i.jsx)(n.p,{children:"Let\u2019s say you want to group users by location and count them:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.users.aggregate([\n  { $group: { _id: "$location", total: { $sum: 1 } } }\n])\n'})}),"\n",(0,i.jsx)(n.p,{children:"Output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  { _id: "Nairobi", total: 2 },\n  { _id: "Kisumu", total: 1 },\n  { _id: "Mombasa", total: 1 }\n]\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-bonus-other-useful-query-operators",children:"\ud83d\udd01 Bonus: Other Useful Query Operators"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Operator"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"$eq"}),", ",(0,i.jsx)(n.code,{children:"$ne"})]}),(0,i.jsx)(n.td,{children:"Equal, Not equal"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"$gt"}),", ",(0,i.jsx)(n.code,{children:"$lt"}),", ",(0,i.jsx)(n.code,{children:"$gte"}),", ",(0,i.jsx)(n.code,{children:"$lte"})]}),(0,i.jsx)(n.td,{children:"Greater/Less than comparisons"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"$in"}),", ",(0,i.jsx)(n.code,{children:"$nin"})]}),(0,i.jsx)(n.td,{children:"Check value in an array"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"$exists"})}),(0,i.jsx)(n.td,{children:"Check if a field exists"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"$type"})}),(0,i.jsx)(n.td,{children:"Check field type"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"$regex"})}),(0,i.jsx)(n.td,{children:"Pattern matching"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"$and"}),", ",(0,i.jsx)(n.code,{children:"$or"}),", ",(0,i.jsx)(n.code,{children:"$not"}),", ",(0,i.jsx)(n.code,{children:"$nor"})]}),(0,i.jsx)(n.td,{children:"Logical operators"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"-what-next-1",children:"\ud83d\ude80 What Next?"}),"\n",(0,i.jsx)(n.p,{children:"Now that you\u2019ve mastered the basics of querying with MongoDB Shell:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 You know how to connect to a DB"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Insert, read, update, and delete documents"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Use logical, comparison, and pattern matching"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Perform basic aggregation"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"-want-to-practice-more",children:"\ud83d\udd17 Want to Practice More?"}),"\n",(0,i.jsx)(n.p,{children:"You can:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Build a local Node.js or Python project and connect it to your ",(0,i.jsx)(n.code,{children:"testdb"})]}),"\n",(0,i.jsx)(n.li,{children:"Explore MongoDB Atlas to practice with cloud-hosted DBs"}),"\n",(0,i.jsxs)(n.li,{children:["Write scripts using ",(0,i.jsx)(n.code,{children:"mongosh"})," to automate queries"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var t=s(6540);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);