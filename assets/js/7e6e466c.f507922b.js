"use strict";(self.webpackChunkproject_wiki=self.webpackChunkproject_wiki||[]).push([[6011],{3032:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Unit Converter/Step by Step Guide to Building a Unit Converter Web App with Flask","title":"Step by Step Guide to Building a Unit Converter Web App with Flask","description":"This tutorial provides a complete, step-by-step walkthrough for building a fully functional Unit Converter web application using Flask. We\'ll cover everything from setup to deployment.","source":"@site/docs/Unit Converter/Step by Step Guide to Building a Unit Converter Web App with Flask.md","sourceDirName":"Unit Converter","slug":"/Unit Converter/Step by Step Guide to Building a Unit Converter Web App with Flask","permalink":"/project-wiki/docs/Unit Converter/Step by Step Guide to Building a Unit Converter Web App with Flask","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Build a Unit Converter Web App - Explained Line by Line","permalink":"/project-wiki/docs/Unit Converter/Build a Unit Converter Web App - Explained Line by Line"},"next":{"title":"Weather API","permalink":"/project-wiki/docs/Weather API/"}}');var o=t(4848),i=t(8453);const s={},l=void 0,a={},d=[{value:"<strong>Table of Contents</strong>",id:"table-of-contents",level:2},{value:"<strong>1. Project Setup</strong>",id:"1-project-setup",level:2},{value:"<strong>1.1 Install Required Tools</strong>",id:"11-install-required-tools",level:3},{value:"<strong>1.2 Create Project Structure</strong>",id:"12-create-project-structure",level:3},{value:"<strong>2. Backend Development (Flask)</strong>",id:"2-backend-development-flask",level:2},{value:"<strong>2.1 Initialize Flask (<code>app.py</code>)</strong>",id:"21-initialize-flask-apppy",level:3},{value:"<strong>2.2 Homepage Route</strong>",id:"22-homepage-route",level:3},{value:"<strong>2.3 Length Converter Route</strong>",id:"23-length-converter-route",level:3},{value:"<strong>2.4 Weight Converter Route</strong>",id:"24-weight-converter-route",level:3},{value:"<strong>2.5 Temperature Converter Route</strong>",id:"25-temperature-converter-route",level:3},{value:"<strong>2.6 Run the App</strong>",id:"26-run-the-app",level:3},{value:"<strong>3. Frontend Templates</strong>",id:"3-frontend-templates",level:2},{value:"<strong>3.1 Base Template (<code>templates/base.html</code>)</strong>",id:"31-base-template-templatesbasehtml",level:3},{value:"<strong>3.2 Homepage (<code>templates/index.html</code>)</strong>",id:"32-homepage-templatesindexhtml",level:3},{value:"<strong>3.3 Length Converter (<code>templates/length.html</code>)</strong>",id:"33-length-converter-templateslengthhtml",level:3},{value:"<strong>4. Styling with CSS (<code>static/style.css</code>)</strong>",id:"4-styling-with-css-staticstylecss",level:2},{value:"<strong>5. Running the Application</strong>",id:"5-running-the-application",level:2},{value:"<strong>6. Deployment Options</strong>",id:"6-deployment-options",level:2},{value:"<strong>Free Hosting</strong>",id:"free-hosting",level:3},{value:"<strong>Production Hosting</strong>",id:"production-hosting",level:3},{value:"<strong>Final Thoughts</strong>",id:"final-thoughts",level:2}];function c(n){const e={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:["This tutorial provides a ",(0,o.jsx)(e.strong,{children:"complete, step-by-step"})," walkthrough for building a fully functional Unit Converter web application using Flask. We'll cover everything from setup to deployment."]}),"\n",(0,o.jsx)(e.h2,{id:"table-of-contents",children:(0,o.jsx)(e.strong,{children:"Table of Contents"})}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#1-project-setup",children:"Project Setup"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#2-backend-development-flask",children:"Backend Development (Flask)"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#3-frontend-templates",children:"Frontend Templates"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#4-styling-with-css",children:"Styling with CSS"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#5-running-the-application",children:"Running the Application"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#6-deployment-options",children:"Deployment Options"})}),"\n"]}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h2,{id:"1-project-setup",children:(0,o.jsx)(e.strong,{children:"1. Project Setup"})}),"\n",(0,o.jsx)(e.h3,{id:"11-install-required-tools",children:(0,o.jsx)(e.strong,{children:"1.1 Install Required Tools"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Python 3.8+"})," (",(0,o.jsx)(e.a,{href:"https://www.python.org/downloads/",children:"Download"}),")"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Flask"})," (Install via pip):","\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-sh",children:"pip install flask\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"12-create-project-structure",children:(0,o.jsx)(e.strong,{children:"1.2 Create Project Structure"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"unit-converter/\n\u251c\u2500\u2500 app.py               # Flask backend\n\u251c\u2500\u2500 templates/           # HTML templates\n\u2502   \u251c\u2500\u2500 base.html        # Base template\n\u2502   \u251c\u2500\u2500 index.html       # Homepage\n\u2502   \u251c\u2500\u2500 length.html      # Length converter\n\u2502   \u251c\u2500\u2500 weight.html      # Weight converter\n\u2502   \u2514\u2500\u2500 temperature.html # Temperature converter\n\u2514\u2500\u2500 static/\n    \u2514\u2500\u2500 style.css        # CSS styles\n"})}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h2,{id:"2-backend-development-flask",children:(0,o.jsx)(e.strong,{children:"2. Backend Development (Flask)"})}),"\n",(0,o.jsx)(e.h3,{id:"21-initialize-flask-apppy",children:(0,o.jsxs)(e.strong,{children:["2.1 Initialize Flask (",(0,o.jsx)(e.code,{children:"app.py"}),")"]})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"from flask import Flask, render_template, request\n\napp = Flask(__name__)\n"})}),"\n",(0,o.jsx)(e.h3,{id:"22-homepage-route",children:(0,o.jsx)(e.strong,{children:"2.2 Homepage Route"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"@app.route('/')\ndef index():\n    return render_template('index.html')\n"})}),"\n",(0,o.jsx)(e.h3,{id:"23-length-converter-route",children:(0,o.jsx)(e.strong,{children:"2.3 Length Converter Route"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"@app.route('/length', methods=['GET', 'POST'])\ndef length_converter():\n    result = None\n    error = None\n    \n    if request.method == 'POST':\n        try:\n            value = float(request.form['value'])\n            from_unit = request.form['from_unit']\n            to_unit = request.form['to_unit']\n            \n            # Conversion logic (to meters first)\n            conversions = {\n                'millimeter': 0.001,\n                'centimeter': 0.01,\n                'meter': 1,\n                'kilometer': 1000,\n                'inch': 0.0254,\n                'foot': 0.3048,\n                'yard': 0.9144,\n                'mile': 1609.34\n            }\n            \n            meters = value * conversions[from_unit]\n            result = meters / conversions[to_unit]\n        except ValueError:\n            error = \"Invalid input. Please enter a number.\"\n    \n    return render_template('length.html', result=result, error=error)\n"})}),"\n",(0,o.jsx)(e.h3,{id:"24-weight-converter-route",children:(0,o.jsx)(e.strong,{children:"2.4 Weight Converter Route"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"@app.route('/weight', methods=['GET', 'POST'])\ndef weight_converter():\n    result = None\n    error = None\n    \n    if request.method == 'POST':\n        try:\n            value = float(request.form['value'])\n            if value < 0:\n\t            error = \"Weight cannot be negative. Please enter a positive number.\"\n\t\t\telse:\n\t            from_unit = request.form['from_unit']\n\t            to_unit = request.form['to_unit']\n            \n            # Conversion logic (to grams first)\n            conversions = {\n                'milligram': 0.001,\n                'gram': 1,\n                'kilogram': 1000,\n                'ounce': 28.3495,\n                'pound': 453.592\n            }\n            \n            grams = value * conversions[from_unit]\n            result = grams / conversions[to_unit]\n        except ValueError:\n            error = \"Invalid input. Please enter a number.\"\n    \n    return render_template('weight.html', result=result, error=error)\n"})}),"\n",(0,o.jsx)(e.h3,{id:"25-temperature-converter-route",children:(0,o.jsx)(e.strong,{children:"2.5 Temperature Converter Route"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"@app.route('/temperature', methods=['GET', 'POST'])\ndef temperature_converter():\n    result = None\n    error = None\n    \n    if request.method == 'POST':\n        try:\n            value = float(request.form['value'])\n            from_unit = request.form['from_unit']\n            to_unit = request.form['to_unit']\n            \n            # Convert to Celsius first\n            if from_unit == 'celsius':\n                celsius = value\n            elif from_unit == 'fahrenheit':\n                celsius = (value - 32) * 5/9\n            elif from_unit == 'kelvin':\n                celsius = value - 273.15\n            \n            # Convert from Celsius to target unit\n            if to_unit == 'celsius':\n                result = celsius\n            elif to_unit == 'fahrenheit':\n                result = (celsius * 9/5) + 32\n            elif to_unit == 'kelvin':\n                result = celsius + 273.15\n        except ValueError:\n            error = \"Invalid input. Please enter a number.\"\n    \n    return render_template('temperature.html', result=result, error=error)\n"})}),"\n",(0,o.jsx)(e.h3,{id:"26-run-the-app",children:(0,o.jsx)(e.strong,{children:"2.6 Run the App"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"if __name__ == '__main__':\n    app.run(debug=True)\n"})}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h2,{id:"3-frontend-templates",children:(0,o.jsx)(e.strong,{children:"3. Frontend Templates"})}),"\n",(0,o.jsx)(e.h3,{id:"31-base-template-templatesbasehtml",children:(0,o.jsxs)(e.strong,{children:["3.1 Base Template (",(0,o.jsx)(e.code,{children:"templates/base.html"}),")"]})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Unit Converter</title>\n    <link rel="stylesheet" href="{{ url_for(\'static\', filename=\'style.css\') }}">\n</head>\n<body>\n    <div class="container">\n        <header>\n            <h1>Unit Converter</h1>\n            <nav>\n                <a href="{{ url_for(\'index\') }}">Home</a>\n                <a href="{{ url_for(\'length_converter\') }}">Length</a>\n                <a href="{{ url_for(\'weight_converter\') }}">Weight</a>\n                <a href="{{ url_for(\'temperature_converter\') }}">Temperature</a>\n            </nav>\n        </header>\n        <main>\n            {% block content %}{% endblock %}\n        </main>\n        <footer>\n            <p>\xa9 2023 Unit Converter</p>\n        </footer>\n    </div>\n</body>\n</html>\n'})}),"\n",(0,o.jsx)(e.h3,{id:"32-homepage-templatesindexhtml",children:(0,o.jsxs)(e.strong,{children:["3.2 Homepage (",(0,o.jsx)(e.code,{children:"templates/index.html"}),")"]})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-html",children:'{% extends "base.html" %}\n\n{% block content %}  \n\t<div class="conversion-types">\n\t\t<div class="conversion-card">\n\t\t\t<div class="card-icon">\ud83d\udccf</div>\n\t\t\t<h3>Length Conversion</h3>\n\t\t\t<p>Convert between millimeters, centimeters, meters, kilometers, inches, feet, yards, and miles.</p>\n\t\t\t<a href="{{ url_for(\'length_converter\') }}" class="btn">Convert Length</a>\n\t\t</div>\n\t\t\n\t\t<div class="conversion-card">\n\t\t\t<div class="card-icon">\u2696\ufe0f</div>\n\t\t\t<h3>Weight Conversion</h3>\n\t\t\t<p>Convert between milligrams, grams, kilograms, ounces, and pounds.</p>\n\t\t\t<a href="{{ url_for(\'weight_converter\') }}" class="btn">Convert Weight</a>\n\t\t</div>\n\t\t\n\t\t<div class="conversion-card">\n\t\t\t<div class="card-icon">\ud83c\udf21\ufe0f</div>\n\t\t\t<h3>Temperature Conversion</h3>\n\t\t\t<p>Convert between Celsius, Fahrenheit, and Kelvin.</p>\n\t\t\t<a href="{{ url_for(\'temperature_converter\') }}" class="btn">Convert Temperature</a>\n\t\t</div>\n\t</div>\n{% endblock %}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"33-length-converter-templateslengthhtml",children:(0,o.jsxs)(e.strong,{children:["3.3 Length Converter (",(0,o.jsx)(e.code,{children:"templates/length.html"}),")"]})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-html",children:'{% extends "base.html" %}\n\n{% block content %}\n    <h2>Length Conversion</h2>\n    \n    {% if error %}\n        <div class="error-box">\n            <p>{{ error }}</p>\n        </div>\n    {% endif %}\n    \n    <div class="converter-container">\n        <form method="POST" action="{{ url_for(\'length_converter\') }}" class="converter-form">\n            <div class="form-group">\n                <label for="value">Value:</label>\n                <input type="number" step="any" id="value" name="value" required\n                       {% if request.method == \'POST\' %}value="{{ request.form[\'value\'] }}"{% endif %}>\n            </div>\n\n            <div class="form-group">\n                <label for="from_unit">From:</label>\n                <select id="from_unit" name="from_unit" required>\n                    {% for unit in [\'millimeter\', \'centimeter\', \'meter\', \'kilometer\', \'inch\', \'foot\', \'yard\', \'mile\'] %}\n                        <option value="{{ unit }}" {% if request.method == \'POST\' and request.form[\'from_unit\'] == unit %}selected{% endif %}>\n                            {{ unit|capitalize }}\n                        </option>\n                    {% endfor %}\n                </select>\n            </div>\n\n            <div class="form-group">\n                <label for="to_unit">To:</label>\n                <select id="to_unit" name="to_unit" required>\n                    {% for unit in [\'millimeter\', \'centimeter\', \'meter\', \'kilometer\', \'inch\', \'foot\', \'yard\', \'mile\'] %}\n                        <option value="{{ unit }}" {% if request.method == \'POST\' and request.form[\'to_unit\'] == unit %}selected{% endif %}>\n                            {{ unit|capitalize }}\n                        </option>\n                    {% endfor %}\n                </select>\n            </div>\n            \n            <button type="submit" class="btn">Convert</button>\n        </form>\n\n        {% if result is not none %}\n        <div class="result-box">\n            <h3>Conversion Result</h3>\n            <div class="result-value">\n\t            {{ request.form[\'value\'] }} {{ request.form[\'from_unit\'] }} =\n\t            <strong>{{ "%.4f"|format(result) }}</strong> {{ request.form[[\'to_unit\']] }}\n            </div>\n        </div>\n        {% endif %}\n    </div>\n\n{% endblock %}\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsxs)(e.em,{children:["(Similar templates exist for ",(0,o.jsx)(e.code,{children:"weight.html"})," and ",(0,o.jsx)(e.code,{children:"temperature.html"}),"\u2014structure follows the same pattern.)"]})}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h2,{id:"4-styling-with-css-staticstylecss",children:(0,o.jsxs)(e.strong,{children:["4. Styling with CSS (",(0,o.jsx)(e.code,{children:"static/style.css"}),")"]})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-css",children:"/* Base Styles */\n:root {\n    --primary-color: #4CAF50;\n    --secondary-color: #607d8b;\n    --error-color: #e74c3c;\n    --text-color: #333;\n    --light-bg: #f5f5f5;\n}\n\nbody {\n    font-family: Arial, sans-serif;\n    line-height: 1.6;\n    margin: 0;\n    padding: 0;\n    background-color: var(--light-bg);\n    color: var(--text-color);\n}\n\n.container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n}\n\nh2 {\n    color: #2C3E50;\n    margin-bottom: 20px;\n    font-size: 1.8rem;\n    font-weight: 500;\n}\n\n/* Navigation */\nheader {\n    background-color: var(--primary-color);\n    padding: 20px 0;\n    text-align: center;\n    margin-bottom: 30px;\n    border-radius: 5px;\n}\n\nheader h1 {\n    margin: 0;\n    color: #eee;\n}\n\nnav {\n    margin-top: 20px;\n}\n\nnav a {\n    color: white;\n    text-decoration: none;\n    margin: 0 15px;\n    padding: 8px 12px;\n    border-radius: 3px;\n    transition: background-color 0.3s;\n}\n\nnav a:hover {\n    background-color: rgba(255, 255, 255, 0.2);\n}\n\n/* Forms & Converter Layout */\n.converter-container {\n    display: flex;\n    gap: 30px;\n    align-items: flex-start;\n}\n\n.converter-form {\n    flex: 1;\n    background: white;\n    padding: 25px;\n    border-radius: 6px;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n}\n\nform {\n    padding: 20px;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    max-width: 500px;\n    margin: 0 auto;\n}\n\n.form-group {\n    margin-bottom: 15px;\n}\n\nlabel {\n    display: block;\n    margin-bottom: 5px;\n    font-weight: bold;\n}\n\ninput, select {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    box-sizing: border-box;\n}\n\n/* Homepage Cards */\n.conversion-types {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    gap: 25px;\n    padding: 20px 0;\n}\n\n.conversion-card {\n    background: white;\n    padding: 25px;\n    border-radius: 10px;\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n    text-align: center;\n    border-top: 4px solid var(--primary-color);\n}\n\n.conversion-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n}\n\n.card-icon {\n    font-size: 2.5rem;\n    margin-bottom: 15px;\n}\n\n.conversion-card h3 {\n    color: #2c3e50;\n    margin-bottom: 15px;\n    font-size: 1.5rem;\n}\n\n.conversion-card p {\n    color: #666;\n    margin-bottom: 20px;\n    line-height: 1.6;\n}\n\n/* Buttons */\n.btn {\n    background-color: var(--primary-color);\n    color: white;\n    border: none;\n    padding: 10px 20px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 10px 0;\n    cursor: pointer;\n    border-radius: 4px;\n    transition: background-color 0.3s;\n}\n\n.btn:hover {\n    background-color: #45a049;\n}\n\n/* Result Box */\n.result-box {\n    flex: 1;\n    background: #f8f9fa;\n    padding: 25px;\n    border-radius: 6px;\n    border-left: 4px solid #4CAF50;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n}\n\n.result-box h3 {\n    margin-top: 0;\n    color: #2C3E50;\n    font-size: 1.3rem;\n}\n\n.result-value {\n    font-size: 1.1rem;\n    padding: 15px;\n    background: white;\n    border-radius: 4px;\n    border: 1px solid #eee;\n}\n\n/* Error Box */\n.error-box {\n    background: #FFF6F6;\n    border: 1px solid #FFD6D6;\n    border-left: 4px solid var(--error-color);\n    color: #C0392B;\n    padding: 12px 15px;\n    margin-bottom: 20px;\n    border-radius: 0 4px 4px 0;\n    font-size: 0.95rem;\n    line-height: 1.4;\n}\n\n.error-box p {\n    margin: 0;\n    padding: 0;\n}\n\n/* Footer */\nfooter {\n    text-align: center;\n    margin-top: 50px;\n    padding: 30px 0;\n    border-top: 1px solid #ddd;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n    .converter-container {\n        flex-direction: column;\n    }\n    .result-box {\n        width: 100%;\n    }\n    \n    .conversion-types {\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .conversion-card {\n        width: 100%;\n    }\n}\n\n"})}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h2,{id:"5-running-the-application",children:(0,o.jsx)(e.strong,{children:"5. Running the Application"})}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Start the Flask development server"}),":","\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-sh",children:"python app.py\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Open in browser"}),":",(0,o.jsx)(e.br,{}),"\n","Visit ",(0,o.jsx)(e.a,{href:"http://localhost:5000",children:"http://localhost:5000"})]}),"\n"]}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h2,{id:"6-deployment-options",children:(0,o.jsx)(e.strong,{children:"6. Deployment Options"})}),"\n",(0,o.jsx)(e.h3,{id:"free-hosting",children:(0,o.jsx)(e.strong,{children:"Free Hosting"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.a,{href:"https://www.pythonanywhere.com/",children:"PythonAnywhere"})})," (Beginner-friendly)"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.a,{href:"https://railway.app/",children:"Railway"})})," (Easy deployment)"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"production-hosting",children:(0,o.jsx)(e.strong,{children:"Production Hosting"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Heroku"})," (Free tier available)"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"AWS Elastic Beanstalk"})," (Scalable)"]}),"\n"]}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h2,{id:"final-thoughts",children:(0,o.jsx)(e.strong,{children:"Final Thoughts"})}),"\n",(0,o.jsxs)(e.p,{children:["You\u2019ve built a ",(0,o.jsx)(e.strong,{children:"fully functional Unit Converter"})," with:\n\u2714 ",(0,o.jsx)(e.strong,{children:"Flask backend"}),(0,o.jsx)(e.br,{}),"\n","\u2714 ",(0,o.jsx)(e.strong,{children:"Clean HTML/CSS frontend"}),(0,o.jsx)(e.br,{}),"\n","\u2714 ",(0,o.jsx)(e.strong,{children:"Responsive design"})]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Next Steps:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Add more units (volume, speed)"}),"\n",(0,o.jsx)(e.li,{children:"Implement user authentication"}),"\n",(0,o.jsx)(e.li,{children:"Deploy online"}),"\n"]}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsxs)(e.strong,{children:["Full code available on ",(0,o.jsx)(e.a,{href:"https://github.com/king-luvaha/Unit-Converter-Web-App",children:"GitHub"}),"."]})})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>l});var r=t(6540);const o={},i=r.createContext(o);function s(n){const e=r.useContext(i);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);