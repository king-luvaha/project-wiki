"use strict";(self.webpackChunkproject_wiki=self.webpackChunkproject_wiki||[]).push([[1953],{8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(6540);const r={},s=t.createContext(r);function l(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}},8464:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Personal Blog/Step by Step Guide to Build a Personal Blog with Node.js and EJS","title":"Step by Step Guide to Build a Personal Blog with Node.js and EJS","description":"Have you ever wanted to create your own blog application but didn\'t know where to start? In this comprehensive tutorial, we\'ll build a fully functional blog application using Node.js, Express, and EJS templates. By the end of this guide, you\'ll have a complete blog with both public and admin interfaces.","source":"@site/docs/Personal Blog/Step by Step Guide to Build a Personal Blog with Node.js and EJS.md","sourceDirName":"Personal Blog","slug":"/Personal Blog/Step by Step Guide to Build a Personal Blog with Node.js and EJS","permalink":"/project-wiki/docs/Personal Blog/Step by Step Guide to Build a Personal Blog with Node.js and EJS","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Personal Blog/Step by Step Guide to Build a Personal Blog with Node.js and EJS.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Personal Blog Application","permalink":"/project-wiki/docs/Personal Blog/Personal Blog Application"},"next":{"title":"Build a Simple Python CLI Task Tracker - Explained Line by Line","permalink":"/project-wiki/docs/Task Tracker/Build a Simple Python CLI Task Tracker - Explained Line by Line"}}');var r=i(4848),s=i(8453);const l={},a=void 0,d={},c=[{value:"What We&#39;re Building",id:"what-were-building",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Project Setup and Initialization",id:"step-1-project-setup-and-initialization",level:2},{value:"1.1 Create the Project Directory",id:"11-create-the-project-directory",level:3},{value:"1.2 Initialize the Node.js Project",id:"12-initialize-the-nodejs-project",level:3},{value:"1.3 Install Required Dependencies",id:"13-install-required-dependencies",level:3},{value:"1.4 Create the Project Structure",id:"14-create-the-project-structure",level:3},{value:"Step 2: Creating the Main Application File",id:"step-2-creating-the-main-application-file",level:2},{value:"2.1 Basic Express Setup",id:"21-basic-express-setup",level:3},{value:"2.2 Configure Express Middleware",id:"22-configure-express-middleware",level:3},{value:"2.3 Set Up Articles Directory",id:"23-set-up-articles-directory",level:3},{value:"2.4 Create Authentication Middleware",id:"24-create-authentication-middleware",level:3},{value:"Step 3: Creating Guest Routes (Public Interface)",id:"step-3-creating-guest-routes-public-interface",level:2},{value:"3.1 Homepage Route",id:"31-homepage-route",level:3},{value:"3.2 Individual Article Route",id:"32-individual-article-route",level:3},{value:"Step 4: Creating Admin Routes",id:"step-4-creating-admin-routes",level:2},{value:"4.1 Admin Dashboard",id:"41-admin-dashboard",level:3},{value:"4.2 Add Article Routes",id:"42-add-article-routes",level:3},{value:"4.3 Edit Article Routes",id:"43-edit-article-routes",level:3},{value:"4.4 Delete Article Route",id:"44-delete-article-route",level:3},{value:"4.5 Start the Server",id:"45-start-the-server",level:3},{value:"Step 5: Creating the Guest Templates",id:"step-5-creating-the-guest-templates",level:2},{value:"5.1 Homepage Template (views/guest/home.ejs)",id:"51-homepage-template-viewsguesthomeejs",level:3},{value:"5.2 Article Page Template (views/guest/article.ejs)",id:"52-article-page-template-viewsguestarticleejs",level:3},{value:"Step 6: Creating Admin Templates",id:"step-6-creating-admin-templates",level:2},{value:"6.1 Admin Dashboard (views/admin/dashboard.ejs)",id:"61-admin-dashboard-viewsadmindashboardejs",level:3},{value:"6.2 Add Article Form (views/admin/add-article.ejs)",id:"62-add-article-form-viewsadminadd-articleejs",level:3},{value:"6.3 Edit Article Form (views/admin/edit-article.ejs)",id:"63-edit-article-form-viewsadminedit-articleejs",level:3},{value:"Step 7: Styling with CSS",id:"step-7-styling-with-css",level:2},{value:"Step 8: Testing Your Blog",id:"step-8-testing-your-blog",level:2},{value:"8.1 Start the Application",id:"81-start-the-application",level:3},{value:"8.2 Test Public Interface",id:"82-test-public-interface",level:3},{value:"8.3 Test Admin Interface",id:"83-test-admin-interface",level:3},{value:"Step 9: Understanding the File Structure",id:"step-9-understanding-the-file-structure",level:2},{value:"9.1 How Articles Are Stored",id:"91-how-articles-are-stored",level:3},{value:"9.2 Request Flow",id:"92-request-flow",level:3},{value:"Step 10: Enhancements and Next Steps",id:"step-10-enhancements-and-next-steps",level:2},{value:"10.1 Security Improvements",id:"101-security-improvements",level:3},{value:"10.2 Feature Additions",id:"102-feature-additions",level:3},{value:"10.3 Deployment Options",id:"103-deployment-options",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"Key Learning Points",id:"key-learning-points",level:3},{value:"What&#39;s Next?",id:"whats-next",level:3}];function o(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Have you ever wanted to create your own blog application but didn't know where to start? In this comprehensive tutorial, we'll build a fully functional blog application using Node.js, Express, and EJS templates. By the end of this guide, you'll have a complete blog with both public and admin interfaces."}),"\n",(0,r.jsx)(n.h2,{id:"what-were-building",children:"What We're Building"}),"\n",(0,r.jsx)(n.p,{children:"Our blog application will have:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A public homepage showing all articles"}),"\n",(0,r.jsx)(n.li,{children:"Individual article pages for detailed reading"}),"\n",(0,r.jsx)(n.li,{children:"An admin dashboard for managing articles"}),"\n",(0,r.jsx)(n.li,{children:"Create, edit, and delete functionality for articles"}),"\n",(0,r.jsx)(n.li,{children:"File-based storage (no database required!)"}),"\n",(0,r.jsx)(n.li,{children:"Basic authentication for admin access"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"Before we begin, make sure you have:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Node.js installed (version 14 or higher)"}),"\n",(0,r.jsx)(n.li,{children:"Basic knowledge of HTML, CSS, and JavaScript"}),"\n",(0,r.jsx)(n.li,{children:"Familiarity with the command line"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-1-project-setup-and-initialization",children:"Step 1: Project Setup and Initialization"}),"\n",(0,r.jsx)(n.p,{children:"Let's start by creating our project structure and initializing our Node.js application."}),"\n",(0,r.jsx)(n.h3,{id:"11-create-the-project-directory",children:"1.1 Create the Project Directory"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir personal-blog\ncd personal-blog\n"})}),"\n",(0,r.jsx)(n.h3,{id:"12-initialize-the-nodejs-project",children:"1.2 Initialize the Node.js Project"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm init -y\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This creates a ",(0,r.jsx)(n.code,{children:"package.json"})," file with default settings."]}),"\n",(0,r.jsx)(n.h3,{id:"13-install-required-dependencies",children:"1.3 Install Required Dependencies"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install express ejs basic-auth body-parser\n"})}),"\n",(0,r.jsx)(n.p,{children:"Let's understand what each dependency does:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"express"}),": Web framework for Node.js"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ejs"}),": Templating engine for dynamic HTML"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"basic-auth"}),": Simple HTTP authentication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"body-parser"}),": Middleware to parse form data"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"14-create-the-project-structure",children:"1.4 Create the Project Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir public public/css public/images\nmkdir views views/guest views/admin\nmkdir articles\n"})}),"\n",(0,r.jsx)(n.p,{children:"Your project structure should now look like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"/blog-project/\n\u251c\u2500\u2500 public/\n\u2502   \u251c\u2500\u2500 css/\n\u2502   \u2502   \u2514\u2500\u2500 style.css          # Main stylesheet\n\u2502   \u2514\u2500\u2500 images/                # Static images directory\n\u251c\u2500\u2500 views/\n\u2502   \u251c\u2500\u2500 guest/\n\u2502   \u2502   \u251c\u2500\u2500 home.ejs          # Public homepage\n\u2502   \u2502   \u2514\u2500\u2500 article.ejs       # Individual article view\n\u2502   \u2514\u2500\u2500 admin/\n\u2502       \u251c\u2500\u2500 dashboard.ejs     # Admin dashboard\n\u2502       \u251c\u2500\u2500 add-article.ejs   # Add new article form\n\u2502       \u2514\u2500\u2500 edit-article.ejs  # Edit article form\n\u251c\u2500\u2500 articles/                  # JSON files for articles (auto-created)\n\u251c\u2500\u2500 app.js                    # Main application file\n\u251c\u2500\u2500 package.json              # Node.js dependencies\n\u2514\u2500\u2500 .gitignore               # Git ignore file\n"})}),"\n",(0,r.jsx)(n.h2,{id:"step-2-creating-the-main-application-file",children:"Step 2: Creating the Main Application File"}),"\n",(0,r.jsxs)(n.p,{children:["Now let's create our main application file ",(0,r.jsx)(n.code,{children:"app.js"}),". This is the heart of our blog application."]}),"\n",(0,r.jsx)(n.h3,{id:"21-basic-express-setup",children:"2.1 Basic Express Setup"}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:"app.js"})," and start with the basic Express setup:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const express = require('express');\nconst fs = require('fs').promises;\nconst path = require('path');\nconst auth = require('basic-auth');\nconst bodyParser = require('body-parser');\n\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Why this setup?"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"We import all necessary modules"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fs.promises"})," gives us modern async/await file operations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"path"})," helps with file system paths"]}),"\n",(0,r.jsx)(n.li,{children:"We set a default port of 3000"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"22-configure-express-middleware",children:"2.2 Configure Express Middleware"}),"\n",(0,r.jsx)(n.p,{children:"Add the following configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Configure app\napp.set('view engine', 'ejs');\napp.set('views', path.join(__dirname, 'views'));\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(bodyParser.urlencoded({ extended: true }));\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"What each line does:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"app.set('view engine', 'ejs')"}),": Tells Express to use EJS for templates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"app.set('views', ...)"}),": Sets the directory where templates are stored"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"express.static(...)"}),": Serves static files (CSS, images) from the public folder"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"bodyParser.urlencoded(...)"}),": Parses form data from POST requests"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"23-set-up-articles-directory",children:"2.3 Set Up Articles Directory"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Articles directory\nconst ARTICLES_DIR = path.join(__dirname, 'articles');\n\n// Ensure articles directory exists\n(async () => {\n  try {\n    await fs.mkdir(ARTICLES_DIR, { recursive: true });\n  } catch (err) {\n    console.error('Error creating articles directory:', err);\n  }\n})();\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Why this is important:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"We define where articles will be stored"}),"\n",(0,r.jsx)(n.li,{children:"The async function ensures the directory exists when the app starts"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"recursive: true"})," creates parent directories if they don't exist"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"24-create-authentication-middleware",children:"2.4 Create Authentication Middleware"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Basic authentication middleware for admin routes\nconst adminAuth = (req, res, next) => {\n  const credentials = auth(req);\n  \n  // Replace with your actual username and password\n  const validUsername = 'admin';\n  const validPassword = 'password123';\n  \n  if (!credentials || \n      credentials.name !== validUsername || \n      credentials.pass !== validPassword) {\n    res.set('WWW-Authenticate', 'Basic realm=\"Admin Access\"');\n    return res.status(401).send('Authentication required');\n  }\n  \n  next();\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"How authentication works:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The middleware extracts credentials from the request"}),"\n",(0,r.jsx)(n.li,{children:"It compares them with our predefined username/password"}),"\n",(0,r.jsx)(n.li,{children:"If invalid, it sends a 401 Unauthorized response"}),"\n",(0,r.jsxs)(n.li,{children:["If valid, it calls ",(0,r.jsx)(n.code,{children:"next()"})," to continue to the route handler"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-3-creating-guest-routes-public-interface",children:"Step 3: Creating Guest Routes (Public Interface)"}),"\n",(0,r.jsx)(n.p,{children:"Now let's create the routes that regular visitors will use."}),"\n",(0,r.jsx)(n.h3,{id:"31-homepage-route",children:"3.1 Homepage Route"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Guest Routes\napp.get('/', async (req, res) => {\n  try {\n    const files = await fs.readdir(ARTICLES_DIR);\n    const articles = await Promise.all(\n      files.map(async file => {\n        const content = await fs.readFile(path.join(ARTICLES_DIR, file), 'utf8');\n        return JSON.parse(content);\n      })\n    );\n    res.render('guest/home', { articles });\n  } catch (err) {\n    console.error(err);\n    res.status(500).send('Error loading articles');\n  }\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step-by-step breakdown:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Read all files from the articles directory"}),"\n",(0,r.jsx)(n.li,{children:"For each file, read its content and parse it as JSON"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Promise.all()"})," waits for all file reads to complete"]}),"\n",(0,r.jsx)(n.li,{children:"Render the home template with the articles data"}),"\n",(0,r.jsx)(n.li,{children:"Handle errors gracefully with try-catch"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"32-individual-article-route",children:"3.2 Individual Article Route"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"app.get('/article/:id', async (req, res) => {\n  try {\n    const filePath = path.join(ARTICLES_DIR, `${req.params.id}.json`);\n    const content = await fs.readFile(filePath, 'utf8');\n    const article = JSON.parse(content);\n    res.render('guest/article', { article });\n  } catch (err) {\n    console.error(err);\n    res.status(404).send('Article not found');\n  }\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"How it works:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:":id"})," is a route parameter that captures the article ID from the URL"]}),"\n",(0,r.jsx)(n.li,{children:"We construct the file path using the ID"}),"\n",(0,r.jsx)(n.li,{children:"Read and parse the specific article file"}),"\n",(0,r.jsx)(n.li,{children:"Render the article template with the article data"}),"\n",(0,r.jsx)(n.li,{children:"Return 404 if the article doesn't exist"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-4-creating-admin-routes",children:"Step 4: Creating Admin Routes"}),"\n",(0,r.jsx)(n.p,{children:"The admin routes handle article management functionality."}),"\n",(0,r.jsx)(n.h3,{id:"41-admin-dashboard",children:"4.1 Admin Dashboard"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Admin Routes\napp.get('/admin', adminAuth, async (req, res) => {\n  try {\n    const files = await fs.readdir(ARTICLES_DIR);\n    const articles = await Promise.all(\n      files.map(async file => {\n        const content = await fs.readFile(path.join(ARTICLES_DIR, file), 'utf8');\n        return { ...JSON.parse(content), id: path.basename(file, '.json') };\n      })\n    );\n    res.render('admin/dashboard', { articles });\n  } catch (err) {\n    console.error(err);\n    res.status(500).send('Error loading articles');\n  }\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key differences from guest route:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Uses ",(0,r.jsx)(n.code,{children:"adminAuth"})," middleware for protection"]}),"\n",(0,r.jsxs)(n.li,{children:["Adds the ",(0,r.jsx)(n.code,{children:"id"})," field to each article (extracted from filename)"]}),"\n",(0,r.jsx)(n.li,{children:"Renders the admin dashboard template"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"42-add-article-routes",children:"4.2 Add Article Routes"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"app.get('/admin/add', adminAuth, (req, res) => {\n  res.render('admin/add-article');\n});\n\napp.post('/admin/add', adminAuth, async (req, res) => {\n  try {\n    const { title, content } = req.body;\n    const id = Date.now().toString();\n    const date = new Date().toISOString();\n    \n    const article = { id, title, content, date };\n    await fs.writeFile(\n      path.join(ARTICLES_DIR, `${id}.json`),\n      JSON.stringify(article, null, 2)\n    );\n    \n    res.redirect('/admin');\n  } catch (err) {\n    console.error(err);\n    res.status(500).send('Error saving article');\n  }\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"How article creation works:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"GET route renders the add article form"}),"\n",(0,r.jsx)(n.li,{children:"POST route processes the form submission"}),"\n",(0,r.jsx)(n.li,{children:"Extract title and content from the form data"}),"\n",(0,r.jsx)(n.li,{children:"Generate a unique ID using current timestamp"}),"\n",(0,r.jsx)(n.li,{children:"Create article object with all necessary fields"}),"\n",(0,r.jsx)(n.li,{children:"Save as JSON file with formatted indentation"}),"\n",(0,r.jsx)(n.li,{children:"Redirect back to admin dashboard"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Why use timestamp as ID?"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Guarantees uniqueness"}),"\n",(0,r.jsx)(n.li,{children:"Provides chronological ordering"}),"\n",(0,r.jsx)(n.li,{children:"Simple to implement"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"43-edit-article-routes",children:"4.3 Edit Article Routes"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"app.get('/admin/edit/:id', adminAuth, async (req, res) => {\n  try {\n    const filePath = path.join(ARTICLES_DIR, `${req.params.id}.json`);\n    const content = await fs.readFile(filePath, 'utf8');\n    const article = JSON.parse(content);\n    res.render('admin/edit-article', { article });\n  } catch (err) {\n    console.error(err);\n    res.status(404).send('Article not found');\n  }\n});\n\napp.post('/admin/edit/:id', adminAuth, async (req, res) => {\n  try {\n    const { title, content } = req.body;\n    const filePath = path.join(ARTICLES_DIR, `${req.params.id}.json`);\n    const existingContent = await fs.readFile(filePath, 'utf8');\n    const existingArticle = JSON.parse(existingContent);\n    \n    const updatedArticle = {\n      ...existingArticle,\n      title,\n      content,\n      date: existingArticle.date // Keep original date\n    };\n    \n    await fs.writeFile(filePath, JSON.stringify(updatedArticle, null, 2));\n    res.redirect('/admin');\n  } catch (err) {\n    console.error(err);\n    res.status(500).send('Error updating article');\n  }\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Edit logic explained:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"GET route loads existing article data for the form"}),"\n",(0,r.jsx)(n.li,{children:"POST route processes the update"}),"\n",(0,r.jsx)(n.li,{children:"We preserve the original date while updating title and content"}),"\n",(0,r.jsx)(n.li,{children:"Use spread operator to maintain all existing fields"}),"\n",(0,r.jsx)(n.li,{children:"Save the updated article back to the file"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"44-delete-article-route",children:"4.4 Delete Article Route"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"app.post('/admin/delete/:id', adminAuth, async (req, res) => {\n  try {\n    await fs.unlink(path.join(ARTICLES_DIR, `${req.params.id}.json`));\n    res.redirect('/admin');\n  } catch (err) {\n    console.error(err);\n    res.status(500).send('Error deleting article');\n  }\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Delete functionality:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Uses POST method for security (prevents accidental deletion via GET)"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fs.unlink()"})," removes the file from the filesystem"]}),"\n",(0,r.jsx)(n.li,{children:"Redirects back to dashboard after successful deletion"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"45-start-the-server",children:"4.5 Start the Server"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Start server\napp.listen(PORT, () => {\n  console.log(`Server running on http://localhost:${PORT}`);\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"step-5-creating-the-guest-templates",children:"Step 5: Creating the Guest Templates"}),"\n",(0,r.jsx)(n.p,{children:"Now let's create the EJS templates for the public interface."}),"\n",(0,r.jsx)(n.h3,{id:"51-homepage-template-viewsguesthomeejs",children:"5.1 Homepage Template (views/guest/home.ejs)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>My Personal Blog</title>\n  <link rel="stylesheet" href="/css/style.css">\n</head>\n<body>\n  <header>\n    <h1>Welcome to My Blog</h1>\n  </header>\n  \n  <main>\n    <section class="articles-list">\n      <h2>Latest Articles</h2>\n      \n      <% if (articles.length === 0) { %>\n        <p>No articles yet. Check back soon!</p>\n      <% } else { %>\n        <ul>\n          <% articles.forEach(article => { %>\n            <li>\n              <h3><a href="/article/<%= article.id %>"><%= article.title %></a></h3>\n              <p class="date">Published on: <%= new Date(article.date).toLocaleDateString() %></p>\n            </li>\n          <% }) %>\n        </ul>\n      <% } %>\n    </section>\n  </main>\n  \n  <footer>\n    <p>&copy; <%= new Date().getFullYear() %> My Personal Blog</p>\n  </footer>\n</body>\n</html>\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"EJS Template Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<% %>"})," for JavaScript logic (if statements, loops)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<%= %>"})," for outputting variables (HTML-escaped)"]}),"\n",(0,r.jsx)(n.li,{children:"Conditional rendering for empty articles list"}),"\n",(0,r.jsx)(n.li,{children:"Dynamic link generation for each article"}),"\n",(0,r.jsx)(n.li,{children:"Date formatting using JavaScript Date methods"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"52-article-page-template-viewsguestarticleejs",children:"5.2 Article Page Template (views/guest/article.ejs)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title><%= article.title %> | My Personal Blog</title>\n  <link rel="stylesheet" href="/css/style.css">\n</head>\n<body>\n  <header>\n    <h1><%= article.title %></h1>\n    <p class="date">Published on: <%= new Date(article.date).toLocaleDateString() %></p>\n  </header>\n  \n  <main>\n    <article>\n      <%- article.content %>\n    </article>\n    \n    <p><a href="/">\u2190 Back to all articles</a></p>\n  </main>\n  \n  <footer>\n    <p>&copy; <%= new Date().getFullYear() %> My Personal Blog</p>\n  </footer>\n</body>\n</html>\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Important note:"})," We use ",(0,r.jsx)(n.code,{children:"<%-"})," for article content to render HTML without escaping, allowing rich text formatting."]}),"\n",(0,r.jsx)(n.h2,{id:"step-6-creating-admin-templates",children:"Step 6: Creating Admin Templates"}),"\n",(0,r.jsx)(n.h3,{id:"61-admin-dashboard-viewsadmindashboardejs",children:"6.1 Admin Dashboard (views/admin/dashboard.ejs)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>Admin Dashboard</title>\n  <link rel="stylesheet" href="/css/style.css">\n</head>\n<body>\n  <header>\n    <h1>Admin Dashboard</h1>\n    <nav>\n      <a href="/admin/add">Add New Article</a> |\n      <a href="/">View Public Site</a>\n    </nav>\n  </header>\n  \n  <main>\n    <h2>Manage Articles</h2>\n    \n    <% if (articles.length === 0) { %>\n      <p>No articles yet. <a href="/admin/add">Add your first article</a></p>\n    <% } else { %>\n      <table>\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Date</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <% articles.forEach(article => { %>\n            <tr>\n              <td><%= article.title %></td>\n              <td><%= new Date(article.date).toLocaleDateString() %></td>\n              <td class="actions">\n                <a href="/admin/edit/<%= article.id %>">Edit</a>\n                <form action="/admin/delete/<%= article.id %>" method="POST" style="display: inline;">\n                  <button type="submit">Delete</button>\n                </form>\n              </td>\n            </tr>\n          <% }) %>\n        </tbody>\n      </table>\n    <% } %>\n  </main>\n  \n  <footer>\n    <p>&copy; <%= new Date().getFullYear() %> My Personal Blog</p>\n  </footer>\n</body>\n</html>\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Dashboard Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Table layout for easy article management"}),"\n",(0,r.jsx)(n.li,{children:"Navigation links to add articles and view public site"}),"\n",(0,r.jsx)(n.li,{children:"Inline delete form for each article"}),"\n",(0,r.jsx)(n.li,{children:"Responsive design considerations"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"62-add-article-form-viewsadminadd-articleejs",children:"6.2 Add Article Form (views/admin/add-article.ejs)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>Add New Article</title>\n  <link rel="stylesheet" href="/css/style.css">\n</head>\n<body>\n  <header>\n    <h1>Add New Article</h1>\n    <nav>\n      <a href="/admin">\u2190 Back to Dashboard</a>\n    </nav>\n  </header>\n  \n  <main>\n    <form action="/admin/add" method="POST">\n      <div class="form-group">\n        <label for="title">Title:</label>\n        <input type="text" id="title" name="title" required>\n      </div>\n      \n      <div class="form-group">\n        <label for="content">Content:</label>\n        <textarea id="content" name="content" rows="10" required></textarea>\n      </div>\n      \n      <button type="submit">Publish Article</button>\n    </form>\n  </main>\n  \n  <footer>\n    <p>&copy; <%= new Date().getFullYear() %> My Personal Blog</p>\n  </footer>\n</body>\n</html>\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Form Best Practices:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Proper labels for accessibility"}),"\n",(0,r.jsx)(n.li,{children:"Required fields for validation"}),"\n",(0,r.jsx)(n.li,{children:"Adequate textarea size for content"}),"\n",(0,r.jsx)(n.li,{children:"Clear navigation back to dashboard"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"63-edit-article-form-viewsadminedit-articleejs",children:"6.3 Edit Article Form (views/admin/edit-article.ejs)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>Edit Article</title>\n  <link rel="stylesheet" href="/css/style.css">\n</head>\n<body>\n  <header>\n    <h1>Edit Article</h1>\n    <nav>\n      <a href="/admin">\u2190 Back to Dashboard</a>\n    </nav>\n  </header>\n  \n  <main>\n    <form action="/admin/edit/<%= article.id %>" method="POST">\n      <div class="form-group">\n        <label for="title">Title:</label>\n        <input type="text" id="title" name="title" value="<%= article.title %>" required>\n      </div>\n      \n      <div class="form-group">\n        <label for="content">Content:</label>\n        <textarea id="content" name="content" rows="10" required><%= article.content %></textarea>\n      </div>\n      \n      <button type="submit">Update Article</button>\n    </form>\n  </main>\n  \n  <footer>\n    <p>&copy; <%= new Date().getFullYear() %> My Personal Blog</p>\n  </footer>\n</body>\n</html>\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Edit Form Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Pre-populated fields with existing article data"}),"\n",(0,r.jsx)(n.li,{children:"Dynamic form action URL with article ID"}),"\n",(0,r.jsx)(n.li,{children:"Same validation as add form"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-7-styling-with-css",children:"Step 7: Styling with CSS"}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:"public/css/style.css"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-css",children:'/* Basic Reset */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: \'Segoe UI\', Tahoma, Geneva, Verdana, sans-serif;\n  line-height: 1.6;\n  color: #333;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nheader {\n  margin-bottom: 30px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid #eee;\n}\n\nh1, h2, h3 {\n  margin-bottom: 15px;\n  color: #2c3e50;\n}\n\n.date {\n  color: #7f8c8d;\n  font-size: 0.9em;\n  margin-bottom: 15px;\n}\n\n.articles-list ul {\n  list-style: none;\n}\n\n.articles-list li {\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid #eee;\n}\n\narticle {\n  margin-bottom: 30px;\n}\n\nfooter {\n  margin-top: 50px;\n  padding-top: 20px;\n  border-top: 1px solid #eee;\n  text-align: center;\n  color: #7f8c8d;\n  font-size: 0.9em;\n}\n\n/* Admin Styles */\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\ntable th, table td {\n  padding: 10px;\n  text-align: left;\n  border-bottom: 1px solid #eee;\n}\n\ntable th {\n  background-color: #f5f5f5;\n}\n\n.actions a {\n  margin-right: 10px;\n  color: #3498db;\n  text-decoration: none;\n}\n\n.actions button {\n  background: none;\n  border: none;\n  color: #e74c3c;\n  cursor: pointer;\n  font-size: 1em;\n}\n\n/* Form Styles */\n.form-group {\n  margin-bottom: 20px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n}\n\n.form-group input,\n.form-group textarea {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-family: inherit;\n  font-size: 1em;\n}\n\n.form-group textarea {\n  min-height: 300px;\n}\n\nbutton[type="submit"] {\n  background-color: #2ecc71;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1em;\n}\n\nbutton[type="submit"]:hover {\n  background-color: #27ae60;\n}\n\nnav a {\n  color: #3498db;\n  text-decoration: none;\n  margin-right: 15px;\n}\n\nnav a:hover {\n  text-decoration: underline;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"CSS Organization:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Global reset and typography"}),"\n",(0,r.jsx)(n.li,{children:"Layout and spacing"}),"\n",(0,r.jsx)(n.li,{children:"Component-specific styles (tables, forms)"}),"\n",(0,r.jsx)(n.li,{children:"Hover effects for better user experience"}),"\n",(0,r.jsx)(n.li,{children:"Responsive design principles"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-8-testing-your-blog",children:"Step 8: Testing Your Blog"}),"\n",(0,r.jsx)(n.h3,{id:"81-start-the-application",children:"8.1 Start the Application"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"node app.js\n"})}),"\n",(0,r.jsx)(n.h3,{id:"82-test-public-interface",children:"8.2 Test Public Interface"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Visit ",(0,r.jsx)(n.code,{children:"http://localhost:3000"})]}),"\n",(0,r.jsx)(n.li,{children:'You should see the homepage with "No articles yet" message'}),"\n",(0,r.jsx)(n.li,{children:"Check that the styling is applied correctly"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"83-test-admin-interface",children:"8.3 Test Admin Interface"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Visit ",(0,r.jsx)(n.code,{children:"http://localhost:3000/admin"})]}),"\n",(0,r.jsxs)(n.li,{children:["Enter credentials: username ",(0,r.jsx)(n.code,{children:"admin"}),", password ",(0,r.jsx)(n.code,{children:"password123"})]}),"\n",(0,r.jsx)(n.li,{children:"You should see the admin dashboard"}),"\n",(0,r.jsx)(n.li,{children:"Try adding a new article"}),"\n",(0,r.jsx)(n.li,{children:"Test editing and deleting articles"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-9-understanding-the-file-structure",children:"Step 9: Understanding the File Structure"}),"\n",(0,r.jsx)(n.h3,{id:"91-how-articles-are-stored",children:"9.1 How Articles Are Stored"}),"\n",(0,r.jsxs)(n.p,{children:["Each article is saved as a JSON file in the ",(0,r.jsx)(n.code,{children:"articles/"})," directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "1640995200000",\n  "title": "My First Blog Post",\n  "content": "<p>This is the content of my first blog post.</p>",\n  "date": "2023-12-31T12:00:00.000Z"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Benefits of file-based storage:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"No database setup required"}),"\n",(0,r.jsx)(n.li,{children:"Easy to backup (just copy the articles folder)"}),"\n",(0,r.jsx)(n.li,{children:"Human-readable format"}),"\n",(0,r.jsx)(n.li,{children:"Version control friendly"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"92-request-flow",children:"9.2 Request Flow"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Public Request"}),": Browser \u2192 Express \u2192 Read articles \u2192 Render template \u2192 Send HTML"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Admin Request"}),": Browser \u2192 Express \u2192 Authentication \u2192 Process request \u2192 Redirect/Render"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-10-enhancements-and-next-steps",children:"Step 10: Enhancements and Next Steps"}),"\n",(0,r.jsx)(n.h3,{id:"101-security-improvements",children:"10.1 Security Improvements"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Change default credentials"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const validUsername = 'your-secure-username';\nconst validPassword = 'your-secure-password';\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Add input validation"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"if (!title || !content) {\n  return res.status(400).send('Title and content are required');\n}\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Sanitize HTML content"})," (if needed):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install dompurify jsdom\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"102-feature-additions",children:"10.2 Feature Additions"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Article categories"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Search functionality"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Comments system"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Image upload"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Rich text editor"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"103-deployment-options",children:"10.3 Deployment Options"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Heroku"}),": Simple deployment with Git"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DigitalOcean"}),": VPS hosting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Netlify"}),": Static site hosting (with build process)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Railway"}),": Modern deployment platform"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(n.p,{children:"Congratulations! You've built a complete blog application from scratch. This project demonstrates:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Express.js fundamentals"}),": Routing, middleware, static files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Template rendering"}),": Dynamic HTML generation with EJS"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"File system operations"}),": Reading and writing JSON files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication"}),": Basic HTTP authentication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CRUD operations"}),": Create, Read, Update, Delete functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Form handling"}),": Processing user input"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CSS styling"}),": Creating a professional appearance"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"key-learning-points",children:"Key Learning Points"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Separation of concerns"}),": Templates, styles, and logic are separated"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error handling"}),": Proper try-catch blocks and user feedback"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security basics"}),": Authentication and input validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"File organization"}),": Logical project structure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"User experience"}),": Intuitive navigation and feedback"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"whats-next",children:"What's Next?"}),"\n",(0,r.jsx)(n.p,{children:"Now that you understand the fundamentals, you can:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add more advanced features"}),"\n",(0,r.jsx)(n.li,{children:"Migrate to a database (MongoDB, PostgreSQL)"}),"\n",(0,r.jsx)(n.li,{children:"Implement user registration and multiple authors"}),"\n",(0,r.jsx)(n.li,{children:"Add API endpoints for mobile apps"}),"\n",(0,r.jsx)(n.li,{children:"Deploy to production"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Remember, this is just the beginning of your web development journey. Each concept you've learned here applies to larger, more complex applications. Keep building, keep learning, and most importantly, keep coding!"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"This tutorial provides a solid foundation for web development with Node.js and Express. Feel free to customize and extend the application based on your specific needs and creativity."})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);