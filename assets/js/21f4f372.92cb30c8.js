"use strict";(self.webpackChunkproject_wiki=self.webpackChunkproject_wiki||[]).push([[5136],{8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}},8966:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"GitHub User Activity/Build a GitHub User Activity CLI Application - Explained Line by Line","title":"Build a GitHub User Activity CLI Application - Explained Line by Line","description":"Certainly! Let\'s break down the first part of your code line by line to explain what each line does. This will help your audience understand the foundational setup of your GitHub activity tracker script.","source":"@site/docs/GitHub User Activity/Build a GitHub User Activity CLI Application - Explained Line by Line.md","sourceDirName":"GitHub User Activity","slug":"/GitHub User Activity/Build a GitHub User Activity CLI Application - Explained Line by Line","permalink":"/project-wiki/docs/GitHub User Activity/Build a GitHub User Activity CLI Application - Explained Line by Line","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Step by Step Guide to Building a Python Expense Tracker CLI","permalink":"/project-wiki/docs/Expense Tracker/Step by Step Guide to Building a Python Expense Tracker CLI"},"next":{"title":"GitHub User activity Application","permalink":"/project-wiki/docs/GitHub User Activity/GitHub User activity Application"}}');var r=s(4848),t=s(8453);const l={},c=void 0,d={},o=[{value:"\ud83e\udde0 <strong>Step 1: Importing Required Modules</strong>",id:"-step-1-importing-required-modules",level:2},{value:"<strong>Line-by-Line Explanation:</strong>",id:"line-by-line-explanation",level:4},{value:"<strong>Key Takeaways :</strong>",id:"key-takeaways-",level:4},{value:"\ud83c\udf10 <strong>Step 2: Fetch GitHub User Activity</strong>",id:"-step-2-fetch-github-user-activity",level:2},{value:"<strong>Function Definition</strong>",id:"function-definition",level:4},{value:"<strong>Constructing the API URL</strong>",id:"constructing-the-api-url",level:4},{value:"<strong>Making the HTTP Request (Try Block)</strong>",id:"making-the-http-request-try-block",level:4},{value:"<strong>Checking for HTTP Errors</strong>",id:"checking-for-http-errors",level:4},{value:"<strong>Returning JSON Data (Success Case)</strong>",id:"returning-json-data-success-case",level:4},{value:"<strong>Handling HTTP Errors (Except Block)</strong>",id:"handling-http-errors-except-block",level:4},{value:"<strong>Handling General Request Errors</strong>",id:"handling-general-request-errors",level:4},{value:"<strong>Fallback Return (If All Else Fails)</strong>",id:"fallback-return-if-all-else-fails",level:4},{value:"\ud83d\udd0e <strong>Step 3: Parse the Activity Data</strong>",id:"-step-3-parse-the-activity-data",level:2},{value:"Function Definition",id:"function-definition-1",level:4},{value:"Empty Input Check",id:"empty-input-check",level:4},{value:"Initialize Output List",id:"initialize-output-list",level:4},{value:"Event Processing Loop",id:"event-processing-loop",level:4},{value:"Extract Event Basics",id:"extract-event-basics",level:4},{value:"Date Formatting",id:"date-formatting",level:4},{value:"Get Event Payload",id:"get-event-payload",level:4},{value:"Event Type Handling",id:"event-type-handling",level:4},{value:"Push Events",id:"push-events",level:4},{value:"Issue Events",id:"issue-events",level:4},{value:"Pull Request Events",id:"pull-request-events",level:4},{value:"Watch Events (Starring)",id:"watch-events-starring",level:4},{value:"Fork Events",id:"fork-events",level:4},{value:"Create Events",id:"create-events",level:4},{value:"Default Case",id:"default-case",level:4},{value:"Store Formatted Message",id:"store-formatted-message",level:4},{value:"Return Results",id:"return-results",level:4},{value:"\ud83d\udda5 <strong>Step 4: Display the Activity to the Terminal</strong>",id:"-step-4-display-the-activity-to-the-terminal",level:2},{value:"Function Definition",id:"function-definition-2",level:4},{value:"Empty Activities Check",id:"empty-activities-check",level:4},{value:"Header Output",id:"header-output",level:4},{value:"Activity Display Loop",id:"activity-display-loop",level:4},{value:"Footer Output",id:"footer-output",level:4},{value:"Example Complete Output",id:"example-complete-output",level:4},{value:"\ud83e\uddea <strong>Step 5: Add the <code>main()</code> Function</strong>",id:"-step-5-add-the-main-function",level:2},{value:"Function Definition",id:"function-definition-3",level:4},{value:"Command Line Argument Check",id:"command-line-argument-check",level:4},{value:"Get Username",id:"get-username",level:4},{value:"Status Message",id:"status-message",level:4},{value:"Fetch Raw Activity Data",id:"fetch-raw-activity-data",level:4},{value:"Check for Failed Fetch",id:"check-for-failed-fetch",level:4},{value:"Parse Activity Data",id:"parse-activity-data",level:4},{value:"Display Results",id:"display-results",level:4},{value:"Example Full Execution",id:"example-full-execution",level:4},{value:"\ud83d\udd01 <strong>Step 6: Run the Script</strong>",id:"-step-6-run-the-script",level:2},{value:"Code Block",id:"code-block",level:3},{value:"Line-by-Line Explanation:",id:"line-by-line-explanation-1",level:4}];function a(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Certainly! Let's break down the first part of your code line by line to explain what each line does. This will help your audience understand the foundational setup of your GitHub activity tracker script."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"-step-1-importing-required-modules",children:["\ud83e\udde0 ",(0,r.jsx)(n.strong,{children:"Step 1: Importing Required Modules"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import sys\nimport requests\nimport json\nfrom datetime import datetime\n"})}),"\n",(0,r.jsx)(n.h4,{id:"line-by-line-explanation",children:(0,r.jsx)(n.strong,{children:"Line-by-Line Explanation:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"import sys"})})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Imports Python's built-in ",(0,r.jsx)(n.code,{children:"sys"})," module."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"This module provides access to system-specific parameters and functions."}),"\n",(0,r.jsxs)(n.li,{children:["In your script, it is used to handle command-line arguments (e.g., ",(0,r.jsx)(n.code,{children:"sys.argv"})," to get the GitHub username input)."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"import requests"})})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Imports the ",(0,r.jsx)(n.code,{children:"requests"})," library, a popular HTTP library for Python."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Used to make HTTP requests to the GitHub API (",(0,r.jsx)(n.code,{children:"requests.get()"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Simplifies sending HTTP requests and handling responses compared to Python's built-in ",(0,r.jsx)(n.code,{children:"urllib"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"import json"})})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Imports Python's built-in ",(0,r.jsx)(n.code,{children:"json"})," module."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Used for parsing JSON data (though ",(0,r.jsx)(n.code,{children:"requests"})," automatically parses JSON responses, so this is a redundancy in your script)."]}),"\n",(0,r.jsxs)(n.li,{children:["Could be useful if you need manual JSON parsing (e.g., ",(0,r.jsx)(n.code,{children:"json.loads()"})," or ",(0,r.jsx)(n.code,{children:"json.dumps()"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"from datetime import datetime"})})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Imports the ",(0,r.jsx)(n.code,{children:"datetime"})," class from Python's ",(0,r.jsx)(n.code,{children:"datetime"})," module."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Used to parse and format timestamps from GitHub's API (e.g., converting ",(0,r.jsx)(n.code,{children:'"2023-10-01T12:34:56Z"'})," into a readable format like ",(0,r.jsx)(n.code,{children:'"Oct 01, 2023 at 12:34"'}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"key-takeaways-",children:(0,r.jsx)(n.strong,{children:"Key Takeaways :"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["These imports are ",(0,r.jsx)(n.strong,{children:"essential dependencies"})," for the script to work."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sys"})," \u2192 Handles command-line inputs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"requests"})," \u2192 Fetches data from GitHub\u2019s API."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"json"})," \u2192 (Optional here) Processes JSON data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"datetime"})," \u2192 Formats timestamps into human-readable dates."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"-step-2-fetch-github-user-activity",children:["\ud83c\udf10 ",(0,r.jsx)(n.strong,{children:"Step 2: Fetch GitHub User Activity"})]}),"\n",(0,r.jsxs)(n.p,{children:["Let's break down the ",(0,r.jsx)(n.code,{children:"fetch_user_activity(username)"})," function line by line. This function is responsible for fetching a GitHub user's public activity data from the GitHub API."]}),"\n",(0,r.jsx)(n.h4,{id:"function-definition",children:(0,r.jsx)(n.strong,{children:"Function Definition"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def fetch_user_activity(username):\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Defines a function named ",(0,r.jsx)(n.code,{children:"fetch_user_activity"})," that takes one parameter, ",(0,r.jsx)(n.code,{children:"username"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["This function will be called with a GitHub username (e.g., ",(0,r.jsx)(n.code,{children:'fetch_user_activity("john-doe")'}),")."]}),"\n",(0,r.jsx)(n.li,{children:"It connects to GitHub's API to retrieve the user's public activity events."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"constructing-the-api-url",children:(0,r.jsx)(n.strong,{children:"Constructing the API URL"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'    url = f"https://api.github.com/users/{username}/events"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Creates the API endpoint URL dynamically using an f-string."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["GitHub's API provides user activity data at ",(0,r.jsx)(n.code,{children:"https://api.github.com/users/{username}/events"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Example: If ",(0,r.jsx)(n.code,{children:'username = "john-doe"'}),", the URL becomes ",(0,r.jsx)(n.code,{children:"https://api.github.com/users/john-doe/events"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"making-the-http-request-try-block",children:(0,r.jsx)(n.strong,{children:"Making the HTTP Request (Try Block)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    try:\n        response = requests.get(url)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Attempts to send a ",(0,r.jsx)(n.strong,{children:"GET"})," request to the constructed URL."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"requests.get(url)"})," fetches data from the GitHub API."]}),"\n",(0,r.jsxs)(n.li,{children:["The response is stored in the ",(0,r.jsx)(n.code,{children:"response"})," variable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"checking-for-http-errors",children:(0,r.jsx)(n.strong,{children:"Checking for HTTP Errors"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"        response.raise_for_status()\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Raises an exception if the HTTP request fails (e.g., 404, 500 errors)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensures the script doesn\u2019t proceed with bad data (e.g., if the user doesn\u2019t exist or the API is down)."}),"\n",(0,r.jsxs)(n.li,{children:["If successful, moves to the next line (",(0,r.jsx)(n.code,{children:"return response.json()"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"returning-json-data-success-case",children:(0,r.jsx)(n.strong,{children:"Returning JSON Data (Success Case)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"        return response.json()\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Parses the API response as JSON and returns it."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"GitHub API returns data in JSON format."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".json()"})," converts the response into a Python dictionary/list for easy processing."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"handling-http-errors-except-block",children:(0,r.jsx)(n.strong,{children:"Handling HTTP Errors (Except Block)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'    except requests.exceptions.HTTPError as http_err:\n        if response.status_code == 404:\n            print(f"Error: User \'{username}\' not found on GitHub.")\n        else:\n            print(f"HTTP error occurred: {http_err}")\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Catches HTTP-related errors (e.g., 404, 403, 500)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"404 Error"}),": User does not exist (e.g., typo in username)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Other HTTP Errors"}),": Generic error handling (e.g., rate limits, server issues)."]}),"\n",(0,r.jsx)(n.li,{children:"Prints a user-friendly error message."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"handling-general-request-errors",children:(0,r.jsx)(n.strong,{children:"Handling General Request Errors"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'    except requests.exceptions.RequestException as err:\n        print(f"Error fetching data: {err}")\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Catches ",(0,r.jsx)(n.strong,{children:"any"})," request-related errors (e.g., no internet, DNS failure)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Broad exception handling ensures the script doesn\u2019t crash unexpectedly."}),"\n",(0,r.jsxs)(n.li,{children:["Examples:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ConnectionError"}),": No internet."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Timeout"}),": Server took too long to respond."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"fallback-return-if-all-else-fails",children:(0,r.jsx)(n.strong,{children:"Fallback Return (If All Else Fails)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    return None\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Returns ",(0,r.jsx)(n.code,{children:"None"})," if the request fails."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Signals to the rest of the script that no data was fetched."}),"\n",(0,r.jsxs)(n.li,{children:["Ensures the program can gracefully handle failures (e.g., ",(0,r.jsx)(n.code,{children:"if raw_activity is None:"})," in ",(0,r.jsx)(n.code,{children:"main()"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"-step-3-parse-the-activity-data",children:["\ud83d\udd0e ",(0,r.jsx)(n.strong,{children:"Step 3: Parse the Activity Data"})]}),"\n",(0,r.jsxs)(n.p,{children:["Let's break down the ",(0,r.jsx)(n.code,{children:"parse_activity(events)"})," function in extreme detail. This function takes raw GitHub event data and converts it into human-readable activity messages."]}),"\n",(0,r.jsx)(n.h4,{id:"function-definition-1",children:"Function Definition"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def parse_activity(events):\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Defines a function to process raw GitHub event data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"events"}),": List of event dictionaries from GitHub API"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": List of formatted activity strings"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"empty-input-check",children:"Empty Input Check"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    if not events:\n        return []\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Handles empty input immediately"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If no events are passed, return empty list to avoid errors"}),"\n",(0,r.jsx)(n.li,{children:'Common practice called a "guard clause"'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"initialize-output-list",children:"Initialize Output List"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    activity_messages = []\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Creates empty list to store results"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Prepares container for our formatted messages"}),"\n",(0,r.jsx)(n.li,{children:"Better than appending to None or undefined variable"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"event-processing-loop",children:"Event Processing Loop"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    for event in events:\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Iterates through each GitHub event"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Processes each event one by one"}),"\n",(0,r.jsx)(n.li,{children:"Events come in reverse chronological order (newest first)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"extract-event-basics",children:"Extract Event Basics"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"        event_type = event.get('type')\n        repo_name = event.get('repo', {}).get('name', 'unknown repository')\n        created_at = event.get('created_at', '')\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Gets core event information safely"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Details"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event.get('type')"}),": Safely gets event type (returns None if missing)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event.get('repo', {}).get('name')"}),": Double-safe dictionary access","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"First gets 'repo' dict (default empty dict if missing)"}),"\n",(0,r.jsx)(n.li,{children:"Then gets 'name' from repo (default 'unknown repository' if missing)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"created_at"}),": Gets timestamp with empty string default"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"date-formatting",children:"Date Formatting"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'        try:\n            date_obj = datetime.strptime(created_at, "%Y-%m-%dT%H:%M:%SZ")\n            formatted_date = date_obj.strftime("%b %d, %Y at %H:%M")\n        except (ValueError, TypeError):\n            formatted_date = "an unknown time"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Converts ISO timestamp to readable format"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Breakdown"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"strptime()"}),": Parses string to datetime object using format:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"%Y"}),": 4-digit year"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"%m"}),": Month (01-12)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"%d"}),": Day (01-31)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"%H"}),": Hour (00-23)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"%M"}),": Minute (00-59)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"%S"}),": Second (00-59)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Z"}),": UTC time zone indicator"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"strftime()"}),": Formats datetime as:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"%b"}),": Abbreviated month name (Jan, Feb)"]}),"\n",(0,r.jsx)(n.li,{children:"Other same as above but formatted"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Handling"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ValueError"}),": If format doesn't match"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TypeError"}),": If created_at is None"]}),"\n",(0,r.jsx)(n.li,{children:'Falls back to "an unknown time"'}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"get-event-payload",children:"Get Event Payload"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"        payload = event.get('payload', {})\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Safely gets event-specific data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Different event types store data in payload"}),"\n",(0,r.jsx)(n.li,{children:"Default empty dict prevents errors if payload missing"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"event-type-handling",children:"Event Type Handling"}),"\n",(0,r.jsx)(n.p,{children:"The function processes several GitHub event types:"}),"\n",(0,r.jsx)(n.h4,{id:"push-events",children:"Push Events"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"        if event_type == \"PushEvent\":\n            commits = payload.get('commits', [])\n            commit_count = len(commits)\n            message = f\"Pushed {commit_count} commit{'s' if commit_count != 1 else ''} to {repo_name}\"\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Logic"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Gets list of commits (default empty list)"}),"\n",(0,r.jsx)(n.li,{children:"Counts commits"}),"\n",(0,r.jsx)(n.li,{children:"Uses ternary for pluralization"}),"\n",(0,r.jsx)(n.li,{children:'Example: "Pushed 3 commits to john-doe/linux"'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"issue-events",children:"Issue Events"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"        elif event_type == \"IssuesEvent\":\n            action = payload.get('action', 'did something')\n            title = payload.get('issue', {}).get('title', 'an issue')\n            message = f\"{action.capitalize()} issue '{title}' in {repo_name}\"\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Logic"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Gets action (open, close, reopen etc.)"}),"\n",(0,r.jsx)(n.li,{children:"Gets issue title safely"}),"\n",(0,r.jsx)(n.li,{children:"Example: \"Opened issue 'Bug fix needed' in org/repo\""}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"pull-request-events",children:"Pull Request Events"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"        elif event_type == \"PullRequestEvent\":\n            action = payload.get('action', 'did something')\n            title = payload.get('pull_request', {}).get('title', 'a pull request')\n            message = f\"{action.capitalize()} pull request '{title}' in {repo_name}\"\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Logic"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Similar to Issues but for PRs"}),"\n",(0,r.jsx)(n.li,{children:"Example: \"Merged pull request 'New feature' in org/repo\""}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"watch-events-starring",children:"Watch Events (Starring)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'        elif event_type == "WatchEvent":\n            message = f"Starred {repo_name}"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": WatchEvent means starred a repo"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"fork-events",children:"Fork Events"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"        elif event_type == \"ForkEvent\":\n            fork_url = payload.get('forkee', {}).get('html_url', 'a repository')\n            message = f\"Forked {repo_name} to {fork_url}\"\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Logic"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Gets URL of new fork"}),"\n",(0,r.jsx)(n.li,{children:'Example: "Forked org/repo to user/repo-fork"'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"create-events",children:"Create Events"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"        elif event_type == \"CreateEvent\":\n            ref_type = payload.get('ref_type', 'something')\n            message = f\"Created a {ref_type} in {repo_name}\"\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": Could be branch, tag, or repository"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"default-case",children:"Default Case"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'        else:\n            message = f"Performed {event_type} on {repo_name}"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Catch-all for unhandled event types"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"GitHub has many event types (60+)"}),"\n",(0,r.jsx)(n.li,{children:"Provides basic info rather than failing"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"store-formatted-message",children:"Store Formatted Message"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'        activity_messages.append(f"- {message} (on {formatted_date})")\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Format"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Bullet point"}),"\n",(0,r.jsx)(n.li,{children:"Action message"}),"\n",(0,r.jsx)(n.li,{children:"Timestamp in parentheses"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'"- Pushed 2 commits to john-doe/linux (on Oct 15, 2023 at 14:30)"'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"return-results",children:"Return Results"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    return activity_messages\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Returns all processed messages"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": Maintains original chronological order (newest first)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"-step-4-display-the-activity-to-the-terminal",children:["\ud83d\udda5 ",(0,r.jsx)(n.strong,{children:"Step 4: Display the Activity to the Terminal"})]}),"\n",(0,r.jsxs)(n.p,{children:["Let's break down the ",(0,r.jsx)(n.code,{children:"display_activity(username, activities)"})," function in detail. This function is responsible for presenting the GitHub activity data to the user in a readable format."]}),"\n",(0,r.jsx)(n.h4,{id:"function-definition-2",children:"Function Definition"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def display_activity(username, activities):\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Defines a function to display GitHub activity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"username"}),": GitHub username being displayed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"activities"}),": List of formatted activity strings from ",(0,r.jsx)(n.code,{children:"parse_activity()"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": None (outputs directly to console)"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"empty-activities-check",children:"Empty Activities Check"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'    if not activities:\n        print(f"No recent activity found for {username} or the account is private.")\n        return\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Handles cases where no activities exist"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Logic"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Checks if ",(0,r.jsx)(n.code,{children:"activities"})," list is empty"]}),"\n",(0,r.jsxs)(n.li,{children:["Prints helpful message explaining possible reasons:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"No recent activity"}),"\n",(0,r.jsx)(n.li,{children:"Account is private (GitHub doesn't return private activity)"}),"\n",(0,r.jsx)(n.li,{children:"Returns early to skip remaining function logic"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why Important"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Prevents confusing empty output"}),"\n",(0,r.jsx)(n.li,{children:"Provides clear feedback to user"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"header-output",children:"Header Output"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'    print(f"\\nRecent activity for {username}:\\n")\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Prints a formatted header"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Formatting"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\\n"})," creates blank lines for visual separation"]}),"\n",(0,r.jsx)(n.li,{children:"Includes the username for context"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example Output"}),":","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\nRecent activity for john-doe:\n\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"activity-display-loop",children:"Activity Display Loop"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    for activity in activities[:10]:\n        print(activity)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Displays the activities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Key Features"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"activities[:10]"}),": Slices list to show only first 10 activities","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Prevents overwhelming output"}),"\n",(0,r.jsx)(n.li,{children:"GitHub returns newest events first"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Simple ",(0,r.jsx)(n.code,{children:"print()"})," for each activity"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why Limit to 10"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Console output can become unwieldy"}),"\n",(0,r.jsx)(n.li,{children:"Most users only care about recent activity"}),"\n",(0,r.jsx)(n.li,{children:"Matches GitHub's default behaviour"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"footer-output",children:"Footer Output"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'    print("\\n")\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Adds visual separation at end"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Makes output clearly distinct from next command prompt"}),"\n",(0,r.jsx)(n.li,{children:"Consistent spacing with header"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Alternative"}),": Could use ",(0,r.jsx)(n.code,{children:"print()"})," once instead of ",(0,r.jsx)(n.code,{children:'print("\\n")'})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-complete-output",children:"Example Complete Output"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Recent activity for john-doe:\n\n- Pushed 2 commits to john-doe/linux (on Oct 15 at 14:30)\n- Merged pull request 'Fix memory leak' in john-doe/linux (on Oct 15 at 12:45)\n- Created a branch in john-doe/linux (on Oct 14 at 09:15)\n\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"-step-5-add-the-main-function",children:["\ud83e\uddea ",(0,r.jsxs)(n.strong,{children:["Step 5: Add the ",(0,r.jsx)(n.code,{children:"main()"})," Function"]})]}),"\n",(0,r.jsxs)(n.p,{children:["Let's break down the ",(0,r.jsx)(n.code,{children:"main()"})," function line by line. This is the entry point of your GitHub activity tracker script that orchestrates all the functionality."]}),"\n",(0,r.jsx)(n.h4,{id:"function-definition-3",children:"Function Definition"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def main():\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Defines the main control flow of the program"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Standard Python practice to encapsulate main logic"}),"\n",(0,r.jsxs)(n.li,{children:["Called when script is executed directly (via ",(0,r.jsx)(n.code,{children:'if __name__ == "__main__"'}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"command-line-argument-check",children:"Command Line Argument Check"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'    if len(sys.argv) != 2:\n        print("Usage: python github_activity.py <username>")\n        sys.exit(1)\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Validates correct command line input"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Breakdown"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sys.argv"}),": List of command line arguments","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sys.argv[0]"}),": Script name (github_activity.py)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sys.argv[1]"}),": Expected username argument"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Checks if exactly 2 arguments exist (script + username)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If not:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Prints usage instructions"}),"\n",(0,r.jsx)(n.li,{children:"Exits with error code 1 (convention for errors)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Correct: ",(0,r.jsx)(n.code,{children:"python github_activity.py john-doe"})]}),"\n",(0,r.jsxs)(n.li,{children:["Incorrect: ",(0,r.jsx)(n.code,{children:"python github_activity.py"})," (missing username)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"get-username",children:"Get Username"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    username = sys.argv[1]\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Extracts the GitHub username from arguments"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Note"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Only reaches this line if argument count was correct"}),"\n",(0,r.jsx)(n.li,{children:"Stores username for use in subsequent functions"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"status-message",children:"Status Message"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'    print(f"\\nFetching GitHub activity for {username}...\\n")\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Provides user feedback"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Why?"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Lets user know the script is working"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\\n"})," creates spacing for better readability"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example Output"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Fetching GitHub activity for john-doe...\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"fetch-raw-activity-data",children:"Fetch Raw Activity Data"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    raw_activity = fetch_user_activity(username)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Gets raw event data from GitHub API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"What Happens"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Calls previously defined ",(0,r.jsx)(n.code,{children:"fetch_user_activity()"})]}),"\n",(0,r.jsx)(n.li,{children:"Passes the username argument"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Returns either:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"JSON data (success)"}),"\n",(0,r.jsx)(n.li,{children:"None (failure, already handled error message)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"check-for-failed-fetch",children:"Check for Failed Fetch"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    if raw_activity is None:\n        sys.exit(1)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Handles API fetch failures"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Logic"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"fetch_user_activity()"})," returned None (due to errors)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Exit with error code 1"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Note: Error message already printed by ",(0,r.jsx)(n.code,{children:"fetch_user_activity()"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"parse-activity-data",children:"Parse Activity Data"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    parsed_activity = parse_activity(raw_activity)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Converts raw JSON to readable messages"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"What Happens"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Takes raw API response (",(0,r.jsx)(n.code,{children:"raw_activity"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Processes through ",(0,r.jsx)(n.code,{children:"parse_activity()"})," function"]}),"\n",(0,r.jsx)(n.li,{children:"Returns list of formatted strings like:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'[\n    "- Pushed 2 commits to john-doe/linux (on Oct 15 at 14:30)",\n    "- Starred microsoft/vscode (on Oct 14 at 09:15)"\n]\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"display-results",children:"Display Results"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    display_activity(username, parsed_activity)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Outputs results to console"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"What Happens"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Calls ",(0,r.jsx)(n.code,{children:"display_activity()"})," with:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The username (for header)"}),"\n",(0,r.jsx)(n.li,{children:"Parsed messages list"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Handles:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Formatting"}),"\n",(0,r.jsx)(n.li,{children:"Limiting to 10 items"}),"\n",(0,r.jsx)(n.li,{children:"Empty list case"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-full-execution",children:"Example Full Execution"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ python github_activity.py john-doe\n\nFetching GitHub activity for john-doe...\n\nRecent activity for john-doe:\n\n- Pushed 1 commit to john-doe/linux (on Oct 15 at 14:30)\n- Merged pull request 'Fix memory leak' (on Oct 15 at 12:45)\n- Created a branch in john-doe/linux (on Oct 14 at 09:15)\n\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"-step-6-run-the-script",children:["\ud83d\udd01 ",(0,r.jsx)(n.strong,{children:"Step 6: Run the Script"})]}),"\n",(0,r.jsx)(n.p,{children:"Let's break down this final code block, which is the entry point of your Python script:"}),"\n",(0,r.jsx)(n.h3,{id:"code-block",children:"Code Block"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'if __name__ == "__main__":\n    main()\n'})}),"\n",(0,r.jsx)(n.h4,{id:"line-by-line-explanation-1",children:"Line-by-Line Explanation:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["**`if ",(0,r.jsx)(n.strong,{children:"name"}),' == "',(0,r.jsx)(n.strong,{children:"main"}),'":']}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": This is a Python idiom that checks whether the script is being run directly or being imported as a module."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"How it works"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["When Python runs a script, it sets the special ",(0,r.jsx)(n.code,{children:"__name__"})," variable."]}),"\n",(0,r.jsxs)(n.li,{children:["If the script is run directly (e.g., ",(0,r.jsx)(n.code,{children:"python github_activity.py"}),"), ",(0,r.jsx)(n.code,{children:"__name__"})," is set to ",(0,r.jsx)(n.code,{children:'"__main__"'}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["If the script is imported as a module in another script, ",(0,r.jsx)(n.code,{children:"__name__"})," is set to the module's name (e.g., ",(0,r.jsx)(n.code,{children:'"github_activity"'}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why important"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Allows the script to behave differently when run directly vs when imported"}),"\n",(0,r.jsxs)(n.li,{children:["Prevents the ",(0,r.jsx)(n.code,{children:"main()"})," function from running automatically if someone imports your script as a module"]}),"\n",(0,r.jsx)(n.li,{children:"Common Python best practice"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"main()"})})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": This calls the ",(0,r.jsx)(n.code,{children:"main()"})," function we defined earlier."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"What happens when called"}),":","\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Checks command line arguments"}),"\n",(0,r.jsx)(n.li,{children:"Fetches GitHub activity data"}),"\n",(0,r.jsx)(n.li,{children:"Parses the raw data"}),"\n",(0,r.jsx)(n.li,{children:"Displays the results"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why put this in a conditional"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensures these actions only occur when the script is run directly"}),"\n",(0,r.jsxs)(n.li,{children:["Allows other scripts to import your functions (like ",(0,r.jsx)(n.code,{children:"fetch_user_activity"}),") without automatically executing the whole program"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);