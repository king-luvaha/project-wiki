"use strict";(self.webpackChunkproject_wiki=self.webpackChunkproject_wiki||[]).push([[4556],{5094:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"GitHub User Activity/GitHub User activity Application","title":"GitHub User activity Application","description":"- Use GitHub API to fetch user activity and display it in the terminal.","source":"@site/docs/GitHub User Activity/GitHub User activity Application.md","sourceDirName":"GitHub User Activity","slug":"/GitHub User Activity/GitHub User activity Application","permalink":"/project-wiki/docs/GitHub User Activity/GitHub User activity Application","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Build a GitHub User Activity CLI Application - Explained Line by Line","permalink":"/project-wiki/docs/GitHub User Activity/Build a GitHub User Activity CLI Application - Explained Line by Line"},"next":{"title":"Step by Step Guide to Building a GitHub User Activity","permalink":"/project-wiki/docs/GitHub User Activity/Step by Step Guide to Building a GitHub User Activity"}}');var r=t(4848),s=t(8453);const a={},c=void 0,l={},o=[{value:"Requirements",id:"requirements",level:2},{value:"Solution",id:"solution",level:3}];function u(e){const i={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Use GitHub API to fetch user activity and display it in the terminal."}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"In this project, you will build a simple command line interface (CLI) to fetch the recent activity of a GitHub user and display it in the terminal."}),"\n",(0,r.jsx)(i.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsx)(i.p,{children:"The application should run from the command line, accept the GitHub username as an argument, fetch the user\u2019s recent activity using the GitHub API, and display it in the terminal. The user should be able to:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Provide the GitHub username as an argument when running the CLI."}),"\n"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"github-activity <username>\n"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Fetch the recent activity of the specified GitHub user using the GitHub API. You can use the following endpoint to fetch the user\u2019s activity:"}),"\n"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"# https://api.github.com/users/<username>/events\n# Example: https://api.github.com/users/kamranahmedse/events\n"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Display the fetched activity in the terminal."}),"\n"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"- Pushed 3 commits to kamranahmedse/developer-roadmap\n- Opened a new issue in kamranahmedse/developer-roadmap\n- Starred kamranahmedse/developer-roadmap\n"})}),"\n",(0,r.jsx)(i.p,{children:"Some constraints to guide the implementation:"}),"\n",(0,r.jsx)(i.p,{children:"--\x3e Do not use any external libraries or frameworks to fetch the GitHub activity.\n--\x3e Handle errors gracefully, such as invalid usernames or API failures."}),"\n",(0,r.jsx)(i.h3,{id:"solution",children:"Solution"}),"\n",(0,r.jsx)(i.p,{children:"[[Step by Step Guide to Building a GitHub User Activity]]"}),"\n",(0,r.jsx)(i.p,{children:"[[Build a GitHub User Activity CLI Application - Explained Line by Line]]"})]})}function d(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>c});var n=t(6540);const r={},s=n.createContext(r);function a(e){const i=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);