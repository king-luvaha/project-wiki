"use strict";(self.webpackChunkproject_wiki=self.webpackChunkproject_wiki||[]).push([[2292],{2279:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"Blogging Platform API/Blogging Platform API Task","title":"Blogging Platform API Task","description":"- Build a RESTful API for a personal blogging platform","source":"@site/docs/Blogging Platform API/Blogging Platform API Task.md","sourceDirName":"Blogging Platform API","slug":"/Blogging Platform API/Blogging Platform API Task","permalink":"/project-wiki/docs/Blogging Platform API/Blogging Platform API Task","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started!","permalink":"/project-wiki/docs/intro"},"next":{"title":"Build a Blogging Platform API - Explained Line by Line","permalink":"/project-wiki/docs/Blogging Platform API/Build a Blogging Platform API - Explained Line by Line"}}');var s=t(4848),l=t(8453);const i={},r=void 0,a={},d=[{value:"Goals",id:"goals",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Create Blog Post",id:"create-blog-post",level:3},{value:"Update Blog Post",id:"update-blog-post",level:2},{value:"Delete Blog Post",id:"delete-blog-post",level:3},{value:"Get Blog Post",id:"get-blog-post",level:3},{value:"Get All Blog Posts",id:"get-all-blog-posts",level:3},{value:"Tech Stack",id:"tech-stack",level:2}];function c(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Build a RESTful API for a personal blogging platform"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"You are required to create a simple RESTful API with basic CRUD operations for a personal blogging platform. CRUD stands for Create, Read, Update, and Delete."}),"\n",(0,s.jsx)(n.h2,{id:"goals",children:"Goals"}),"\n",(0,s.jsx)(n.p,{children:"The goals of this project are to help you:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Understand what the RESTful APIs are including best practices and conventions"}),"\n",(0,s.jsx)(n.li,{children:"Learn how to create a RESTful API"}),"\n",(0,s.jsx)(n.li,{children:"Learn about common HTTP methods like GET, POST, PUT, PATCH, DELETE"}),"\n",(0,s.jsx)(n.li,{children:"Learn about status codes and error handling in APIs"}),"\n",(0,s.jsx)(n.li,{children:"Learn how to perform CRUD operations using an API"}),"\n",(0,s.jsx)(n.li,{children:"Learn how to work with databases"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,s.jsx)(n.p,{children:"You should create a RESTful API for a personal blogging platform. The API should allow users to perform the following operations:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Create a new blog post"}),"\n",(0,s.jsx)(n.li,{children:"Update an existing blog post"}),"\n",(0,s.jsx)(n.li,{children:"Delete an existing blog post"}),"\n",(0,s.jsx)(n.li,{children:"Get a single blog post"}),"\n",(0,s.jsx)(n.li,{children:"Get all blog posts"}),"\n",(0,s.jsx)(n.li,{children:"Filter blog posts by a search term"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Given below are the details for each API operation."}),"\n",(0,s.jsx)(n.h3,{id:"create-blog-post",children:"Create Blog Post"}),"\n",(0,s.jsxs)(n.p,{children:["Create a new blog post using the ",(0,s.jsx)(n.code,{children:"POST"})," method"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'POST /posts\n{\n  "title": "My First Blog Post",\n  "content": "This is the content of my first blog post.",\n  "category": "Technology",\n  "tags": ["Tech", "Programming"]\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Each blog post should have the following fields:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "title": "My First Blog Post",\n  "content": "This is the content of my first blog post.",\n  "category": "Technology",\n  "tags": ["Tech", "Programming"]\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The endpoint should validate the request body and return a ",(0,s.jsx)(n.code,{children:"201 Created"})," status code with the newly created blog post i.e."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "id": 1,\n  "title": "My First Blog Post",\n  "content": "This is the content of my first blog post.",\n  "category": "Technology",\n  "tags": ["Tech", "Programming"],\n  "createdAt": "2021-09-01T12:00:00Z",\n  "updatedAt": "2021-09-01T12:00:00Z"\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["or a ",(0,s.jsx)(n.code,{children:"400 Bad Request"})," status code with error messages in case of validation errors."]}),"\n",(0,s.jsx)(n.h2,{id:"update-blog-post",children:"Update Blog Post"}),"\n",(0,s.jsxs)(n.p,{children:["Update an existing blog post using the ",(0,s.jsx)(n.code,{children:"PUT"})," method"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'PUT /posts/1\n{\n  "title": "My Updated Blog Post",\n  "content": "This is the updated content of my first blog post.",\n  "category": "Technology",\n  "tags": ["Tech", "Programming"]\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The endpoint should validate the request body and return a ",(0,s.jsx)(n.code,{children:"200 OK"})," status code with the updated blog post i.e."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "id": 1,\n  "title": "My Updated Blog Post",\n  "content": "This is the updated content of my first blog post.",\n  "category": "Technology",\n  "tags": ["Tech", "Programming"],\n  "createdAt": "2021-09-01T12:00:00Z",\n  "updatedAt": "2021-09-01T12:30:00Z"\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["or a ",(0,s.jsx)(n.code,{children:"400 Bad Request"})," status code with error messages in case of validation errors. It should return a ",(0,s.jsx)(n.code,{children:"404 Not Found"})," status code if the blog post was not found."]}),"\n",(0,s.jsx)(n.h3,{id:"delete-blog-post",children:"Delete Blog Post"}),"\n",(0,s.jsxs)(n.p,{children:["Delete an existing blog post using the ",(0,s.jsx)(n.code,{children:"DELETE"})," method"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"DELETE /posts/1\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The endpoint should return a ",(0,s.jsx)(n.code,{children:"204 No Content"})," status code if the blog post was successfully deleted or a ",(0,s.jsx)(n.code,{children:"404 Not Found"})," status code if the blog post was not found."]}),"\n",(0,s.jsx)(n.h3,{id:"get-blog-post",children:"Get Blog Post"}),"\n",(0,s.jsxs)(n.p,{children:["Get a single blog post using the ",(0,s.jsx)(n.code,{children:"GET"})," method"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"GET /posts/1\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The endpoint should return a ",(0,s.jsx)(n.code,{children:"200 OK"})," status code with the blog post i.e."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "id": 1,\n  "title": "My First Blog Post",\n  "content": "This is the content of my first blog post.",\n  "category": "Technology",\n  "tags": ["Tech", "Programming"],\n  "createdAt": "2021-09-01T12:00:00Z",\n  "updatedAt": "2021-09-01T12:00:00Z"\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["or a ",(0,s.jsx)(n.code,{children:"404 Not Found"})," status code if the blog post was not found."]}),"\n",(0,s.jsx)(n.h3,{id:"get-all-blog-posts",children:"Get All Blog Posts"}),"\n",(0,s.jsxs)(n.p,{children:["Get all blog posts using the ",(0,s.jsx)(n.code,{children:"GET"})," method"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"GET /posts\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The endpoint should return a ",(0,s.jsx)(n.code,{children:"200 OK"})," status code with an array of blog posts i.e."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'[\n  {\n    "id": 1,\n    "title": "My First Blog Post",\n    "content": "This is the content of my first blog post.",\n    "category": "Technology",\n    "tags": ["Tech", "Programming"],\n    "createdAt": "2021-09-01T12:00:00Z",\n    "updatedAt": "2021-09-01T12:00:00Z"\n  },\n  {\n    "id": 2,\n    "title": "My Second Blog Post",\n    "content": "This is the content of my second blog post.",\n    "category": "Technology",\n    "tags": ["Tech", "Programming"],\n    "createdAt": "2021-09-01T12:30:00Z",\n    "updatedAt": "2021-09-01T12:30:00Z"\n  }\n]\n'})}),"\n",(0,s.jsx)(n.p,{children:"You don\u2019t have to implement pagination, authentication or authorization for this project. You can focus on the core functionality of the API."}),"\n",(0,s.jsx)(n.p,{children:"While retrieving posts, user can also filter posts by a search term. You should do a wildcard search on the title, content or category fields of the blog posts. For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"GET /posts?term=tech\n"})}),"\n",(0,s.jsx)(n.p,{children:"This should return all blog posts that have the term \u201ctech\u201d in their title, content or category. You can use a simple SQL query if you are using a SQL database or a similar query for a NoSQL database."}),"\n",(0,s.jsx)(n.h2,{id:"tech-stack",children:"Tech Stack"}),"\n",(0,s.jsx)(n.p,{children:"Feel free to use any programming language, framework, and database of your choice for this project. Here are some suggestions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If you are using JavaScript, you can use Node.js with Express.js"}),"\n",(0,s.jsx)(n.li,{children:"If you are using Python, you can use Flask or Django"}),"\n",(0,s.jsx)(n.li,{children:"If you are using Java, you can use Spring Boot"}),"\n",(0,s.jsx)(n.li,{children:"If you are using Ruby, you can use Ruby on Rails"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For databases, you can use:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"MySQL if you are using SQL"}),"\n",(0,s.jsx)(n.li,{children:"MongoDB if you are using NoSQL"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var o=t(6540);const s={},l=o.createContext(s);function i(e){const n=o.useContext(l);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);