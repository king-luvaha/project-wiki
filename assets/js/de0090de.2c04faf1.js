"use strict";(self.webpackChunkproject_wiki=self.webpackChunkproject_wiki||[]).push([[5091],{302:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Task Tracker/Task Tracker CLI application","title":"Task Tracker CLI application","description":"- Build a CLI app to track your tasks and manage your to-do lists.","source":"@site/docs/Task Tracker/Task Tracker CLI application.md","sourceDirName":"Task Tracker","slug":"/Task Tracker/Task Tracker CLI application","permalink":"/project-wiki/docs/Task Tracker/Task Tracker CLI application","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Task Tracker/Task Tracker CLI application.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Step by Step Guide to Building a Python CLI Task Tracker","permalink":"/project-wiki/docs/Task Tracker/Step by Step Guide to Building a Python CLI Task Tracker"},"next":{"title":"Unit Converter","permalink":"/project-wiki/docs/Unit Converter/"}}');var a=n(4848),i=n(8453);const r={},o=void 0,l={},d=[{value:"Requirements",id:"requirements",level:2},{value:"Example",id:"example",level:2},{value:"Task Properties",id:"task-properties",level:2},{value:"Solution",id:"solution",level:2}];function c(e){const t={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Build a CLI app to track your tasks and manage your to-do lists."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Task tracker is a project used to track and manage your tasks. In this task, you will build a simple command line interface (CLI) to track what you need to do, what you have done, and what you are currently working on. This project will help you practice your programming skills, including working with the filesystem, handling user inputs, and building a simple CLI application."}),"\n",(0,a.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,a.jsx)(t.p,{children:"The application should run from the command line, accept user actions and inputs as arguments, and store the tasks in a JSON file."}),"\n",(0,a.jsx)(t.p,{children:"The user should be able to:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"Add, update and delete tasks."}),"\n",(0,a.jsx)(t.li,{children:"Mark a task as in progress or done"}),"\n",(0,a.jsx)(t.li,{children:"List all tasks"}),"\n",(0,a.jsx)(t.li,{children:"List all the tasks that are done"}),"\n",(0,a.jsx)(t.li,{children:"List all the tasks that are not done"}),"\n",(0,a.jsx)(t.li,{children:"List all tasks that are in progress"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Some constraints to guide the implementation:"}),"\n",(0,a.jsx)(t.p,{children:"--\x3e Use positional arguments in command line to accept user inputs.\n--\x3e Use a JSON file to store the tasks in the current directory.\n--\x3e The JSON file should be created if it does not exist.\n--\x3e Use the native file system module of your programming language to interact with the JSON file.\n--\x3e Do not use any external libraries or frameworks to build this project.\n--\x3e Ensure to handle errors and edge cases gracefully."}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.p,{children:"The list of commands and their usage is given below:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'\n# Adding a new task\ntask-cli add "Buy groceries"\n# Ouput: Task added successfully (id: 1)\n\n# Updating and deleting tasks\ntask-cli update 1 "Buy groceries and cook dinner"\ntask-cli delete 1\n\n# Marking a task as in progress or done\ntask-cli mark-in-progress 1\ntask-cli mark-done 1\n\n# Listing all tasks\ntask-cli list\n\n# Listing tasks by status\ntask-cli list done\ntask-cli list todo\ntask-cli list in-progress\n\n'})}),"\n",(0,a.jsx)(t.h2,{id:"task-properties",children:"Task Properties"}),"\n",(0,a.jsx)(t.p,{children:"Each task should have the following properties:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"id: A unique identifier for the task"}),"\n",(0,a.jsx)(t.li,{children:"description: A short description of the task"}),"\n",(0,a.jsxs)(t.li,{children:["status: The status of the task (",(0,a.jsx)(t.code,{children:"todo"}),", ",(0,a.jsx)(t.code,{children:"in-progress"}),", ",(0,a.jsx)(t.code,{children:"done"}),")"]}),"\n",(0,a.jsx)(t.li,{children:"createdAt: The date and time when the task was created"}),"\n",(0,a.jsx)(t.li,{children:"updatedAt: The date and time when the task was last updated"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Make sure to add these properties to the JSON file when adding a new task and update them when updating a task."}),"\n",(0,a.jsx)(t.h2,{id:"solution",children:"Solution"}),"\n",(0,a.jsx)(t.p,{children:"[[Step by Step Guide to Building a Python CLI Task Tracker]]"}),"\n",(0,a.jsx)(t.p,{children:"[[Build a Simple Python CLI Task Tracker - Explained Line by Line]]"})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(6540);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);