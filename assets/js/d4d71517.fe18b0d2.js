"use strict";(self.webpackChunkproject_wiki=self.webpackChunkproject_wiki||[]).push([[1522],{869:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Expense Tracker/Expense Tracker CLI Application","title":"Expense Tracker CLI Application","description":"- Build a simple expense tracker to manage your finances.","source":"@site/docs/Expense Tracker/Expense Tracker CLI Application.md","sourceDirName":"Expense Tracker","slug":"/Expense Tracker/Expense Tracker CLI Application","permalink":"/project-wiki/docs/Expense Tracker/Expense Tracker CLI Application","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Expense Tracker/Expense Tracker CLI Application.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Build an Expense Tracker CLI Application - Explained Line by Line","permalink":"/project-wiki/docs/Expense Tracker/Build an Expense Tracker CLI Application - Explained Line by Line"},"next":{"title":"Step by Step Guide to Building a Python Expense Tracker CLI","permalink":"/project-wiki/docs/Expense Tracker/Step by Step Guide to Building a Python Expense Tracker CLI"}}');var r=s(4848),i=s(8453);const a={},o=void 0,l={},c=[{value:"Requirements",id:"requirements",level:3},{value:"Implementation",id:"implementation",level:3},{value:"Solution",id:"solution",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Build a simple expense tracker to manage your finances."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Build a simple expense tracker application to manage your finances. The application should allow users to add, delete, and view their expenses. The application should also provide a summary of the expenses."}),"\n",(0,r.jsx)(n.h3,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsx)(n.p,{children:"Application should run from the command line and should have the following features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Users can add an expense with a description and amount."}),"\n",(0,r.jsx)(n.li,{children:"Users can update an expense."}),"\n",(0,r.jsx)(n.li,{children:"Users can delete an expense."}),"\n",(0,r.jsx)(n.li,{children:"Users can view all expenses."}),"\n",(0,r.jsx)(n.li,{children:"Users can view a summary of all expenses."}),"\n",(0,r.jsx)(n.li,{children:"Users can view a summary of expenses for a specific month (of current year)."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Here are some additional features that you can add to the application:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add expense categories and allow users to filter expenses by category."}),"\n",(0,r.jsx)(n.li,{children:"Allow users to set a budget for each month and show a warning when the user exceeds the budget."}),"\n",(0,r.jsx)(n.li,{children:"Allow users to export expenses to a CSV file."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The list of commands and their expected output is shown below:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'$ expense-tracker add --description "Lunch" --amount 20\n# Expense added successfully (ID: 1)\n\n$ expense-tracker add --description "Dinner" --amount 10\n# Expense added successfully (ID: 2)\n\n$ expense-tracker list\n# ID  Date        Description    Amount\n# 1   2024-08-06  Lunch           $20\n# 2   2024-08-06  Dinner          $10\n\n$ expense-tracker summary\n# Total expenses: $30\n\n$ expense-tracker delete --id 2\n# Expense deleted successfully\n\n$ expense-tracker summary\n# Total expenses: $20\n\n$ expenses-tracker summary --month 8\n# Total expenses for August: $20\n'})}),"\n",(0,r.jsx)(n.h3,{id:"implementation",children:"Implementation"}),"\n",(0,r.jsx)(n.p,{children:"Here are some suggestions:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"argparse"})," for parsing command arguments."]}),"\n",(0,r.jsx)(n.li,{children:"Use a simple text file to store the expenses data. You can use JSON, CSV, or any other format to store the data."}),"\n",(0,r.jsx)(n.li,{children:"Add error handling to handle invalid inputs and edge cases (e.g. negative amounts, non-existent expense IDs, etc)."}),"\n",(0,r.jsx)(n.li,{children:"Use functions to modularize the code and make it easier to test and maintain."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,r.jsx)(n.p,{children:"[[Step by Step Guide to Building a Python Expense Tracker CLI]]"})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var t=s(6540);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);